//
//  ChartBll.m
//  TPZ
//
//  Created by  rjt on 16/3/16.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "ChartBll.h"
#import "ChartSection.h"
#import "UIImageView+WebCache.h"

@interface ChartBll(){
    
}
@property(strong,nonatomic) ChartSection* chartDetailSection;

@property(nonatomic) BOOL isBeginAnimation;
@end

@implementation ChartBll
+(instancetype)bllWithController:(MyViewController*)controller tableView:(QUTableView*)tableView manager:(STOManager *)manager{
    ChartBll* selfBll=[self bllWithController:controller tableView:tableView ];
    selfBll.manager = manager;
    return selfBll;
}
-(void)initQuickUI:(QUTableView *)tableView{
    tableView.scrollEnabled = NO;
    self.pAdaptor = [QUFlatAdaptor adaptorWithTableView:tableView nibArray:@[@"ChartSection"] delegate:self backGroundClr:Color_Bg_RGBA(0, 0, 0,0.5)];
    [self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[ChartSection class]];
}

-(void)QUAdaptor:(QUAdaptor *)adaptor willDidLoadSection:(QUSection *)section willDidLoadEntity:(QUEntity *)entity{
    if ([section isKindOfClass:[ChartSection class]]) {
        ChartSection* s=(ChartSection *)section;
        s.manager = self.manager;
        self.chartDetailSection = s;
        [s.closeBtn addTarget:self action:@selector(hide) forControlEvents:UIControlEventTouchUpInside];
        [s.refreshBtn  addTarget:self action:@selector(refreshHq) forControlEvents:UIControlEventTouchUpInside];
        [s.changeBtn  addTarget:self action:@selector(changeHide) forControlEvents:UIControlEventTouchUpInside];
//        [s.hideAnimationBtn addTarget:self action:@selector(hideWithAnimation) forControlEvents:UIControlEventTouchUpInside];
//        if (_come_type) {
//            [s.plateImg sd_setImageWithURL:[NSURL URLWithString:[[ProductsManager shareProductsManager] getPlateMiniIconByComeType:_come_type]]];
//        }
    }
    
}

-(void)QUAdaptor:(QUAdaptor *)adaptor forSection:(QUSection *)section forEntity:(QUEntity *)entity{
    if ([section isKindOfClass:[ChartSection class]]) {
        ChartSection *s = (ChartSection*)section;
        if (self.pankouEntity) {
            s.stockNameLabel.text = self.manager.stoEntity.stockName;
            s.stockCodeLabel.text = self.manager.stoEntity.stockCode;
//            s.plateLabel.text = self.manager.stoEntity.stockKind;
            if ([self.pankouEntity.New floatValue]>0) {
                UIColor *color = [AppUtil colorWithOpen:[self.pankouEntity.YClose floatValue] andNew:[self.pankouEntity.New floatValue]];
                s.priceLabel.text = [AppUtil price:self.pankouEntity.New];
                s.priceLabel.textColor = color;
                float minus = [self.pankouEntity.New floatValue] - [self.pankouEntity.YClose floatValue];
                NSString *minusPrice = [AppUtil price:[NSString stringWithFormat:@"%f",minus]];
                NSString *rate = [NSString stringWithFormat:@"%.2f%%",([self.pankouEntity.New floatValue] - [self.pankouEntity.YClose floatValue])/[self.pankouEntity.YClose floatValue]*100];
                
                s.rateLabel.textColor = color;
                
                if (minus>0) {
                    s.rateLabel.text = [NSString stringWithFormat:@"+%@ +%@",minusPrice,rate];
                }else{
                    s.rateLabel.text = [NSString stringWithFormat:@"%@ %@",minusPrice,rate];
                }
                s.openLabel.text = [AppUtil price:self.pankouEntity.Open];
                s.openLabel.textColor = [AppUtil colorWithOpen:[self.pankouEntity.YClose floatValue] andNew:[self.pankouEntity.Open floatValue]];
                s.highLabel.text = [AppUtil price:self.pankouEntity.High];
                s.highLabel.textColor = [AppUtil colorWithOpen:[self.pankouEntity.YClose floatValue] andNew:[self.pankouEntity.High floatValue]];
                s.lowLabel.text = [AppUtil price:self.pankouEntity.Low];
                s.lowLabel.textColor = [AppUtil colorWithOpen:[self.pankouEntity.YClose floatValue] andNew:[self.pankouEntity.Low floatValue]];
            }
            if ([self.pankouEntity.YClose floatValue]>0) {
                s.ycloseLabel.text = [AppUtil price:self.pankouEntity.YClose];
                s.ycloseLabel.textColor = [AppUtil colorWithOpen:[self.pankouEntity.YClose floatValue] andNew:[self.pankouEntity.YClose floatValue]];
            }
        }
        
    }
    
}

//-(void)showWithAnimation{
//    DEFINED_WEAK_SELF
//    self.isBeginAnimation = YES;
//    [self show];
//    CGRect oldframe = self.chartDetailSection.detailView.frame;
//    CGRect frame =  self.chartDetailSection.detailView.frame;
//    frame.size.height = 0;
//    self.chartDetailSection.detailView.frame= frame;
//    
//    self.chartDetailSection.closeBtn.hidden = YES;
////    self.chartDetailSection.hideAnimationBtn.hidden = NO;
//    self.chartDetailSection.refreshBtn.hidden = NO;
//    self.chartDetailSection.changeBtn.hidden = NO;
//
//    [UIView animateWithDuration:.3f
//                          delay:0.f
//                        options:UIViewAnimationOptionCurveEaseIn //设置动画类型
//                     animations:^{
//                         self.chartDetailSection.detailView.frame = oldframe;
//                         CGAffineTransform transform =CGAffineTransformMakeRotation(M_PI);
//                         [_self.chartDetailSection.hideAnimationBtn setTransform:transform];
//                     }
//                     completion:^(BOOL finished){
//                         _self.isBeginAnimation = NO;
//                     }];
//}

//-(void)hideWithAnimation{
//    self.isBeginAnimation = YES;
//    CGRect oldframe = self.chartDetailSection.detailView.frame;
////    CGRect frame =  self.chartDetailSection.detailView.frame;
////    frame.size.height = 0;
//    DEFINED_WEAK_SELF
//    [UIView animateWithDuration:.3f
//                          delay:0.f
//                        options:UIViewAnimationOptionCurveEaseIn //设置动画类型
//                     animations:^{
//                         //开始动画
//                         CGRect frame =  self.chartDetailSection.detailView.frame;
//                         frame.size.height = 36;
//                         self.chartDetailSection.detailView.frame = frame;
//                         CGAffineTransform transform =CGAffineTransformMakeRotation(2*M_PI);
//                        [_self.chartDetailSection.hideAnimationBtn setTransform:transform];
//                     }
//                     completion:^(BOOL finished){
//                         [_self hide];
//                         _self.isBeginAnimation = NO;
//                         self.chartDetailSection.detailView.frame = oldframe;
//                     }];
//
//}

-(void)changeHide{
    [[NSNotificationCenter defaultCenter] postNotificationName:kChangeChoseStock object:nil];
    [self hide];
}

-(void)refreshHq{
    [[NSNotificationCenter defaultCenter] postNotificationName:kRefreshChoseStock object:nil];
}



-(void)refreshPankou:(ProductPanKouEntity *)e{
    if (self.isBeginAnimation == NO) {
        self.pankouEntity = e;
        [self.chartDetailSection refreshPankou:e];
        [self.pAdaptor notifyChanged];
    }
    
}
@end
