//
//  BuildStrategyBll.m
//  TPM
//
//  Created by admin on 16/7/25.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#define kBuildProfitKey @"kBuildProfitKey"
#define kBuildProfitVal 3

#import "BuildStrategyBll.h"
#import "BuildStrategySection.h"
#import "BuildStrategyListSection.h"
#import "BuyingListEntity.h"
#import "BuildMarketViewController.h"
#import "BuildStrategyViewController.h"
#import "EmptyListSection.h"
#import "ProfitEntity.h"
#import "StrategyHqViewController.h"

@implementation BuildStrategyBll

-(void)loadBll
{
    [super loadBll];
}

-(void)initQuickUI:(QUTableView *)tableView
{
    
    self.pAdaptor = [QUFlatAdaptor adaptorWithTableView:tableView nibArray:@[@"BuildStrategyListSection", @"EmptyListSection"] delegate:self];
    
    //[self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[BuildStrategyListSection class]];
    
    [self.pAdaptor setRefreshDelegateFooter:self];
    [self.pAdaptor setRefreshDelegateHeader:self];
}

-(void)QUAdaptor:(QUAdaptor *)adaptor forSection:(QUSection *)section forEntity:(QUEntity *)entity
{
    if ([section isKindOfClass:[BuildStrategyListSection class]]) {
        
        BuildStrategyListSection *s = (BuildStrategyListSection *)section;
        BuyingListRecordsEntity *e = (BuyingListRecordsEntity *)entity;
        
        s.buildStrategyBtn.tag = 400;
        //协议编号
        s.pnoLabel.text = [NSString stringWithFormat:@"协议编号：%@", e.pno];
        //时间
        NSDateFormatter *formater = [[NSDateFormatter alloc]init];
        formater.dateFormat = @"MM-dd HH:mm";
        NSDate *date = [NSDate dateWithTimeIntervalSince1970:e.start_time.integerValue];
        s.timeLabel.text = [formater stringFromDate:date];
        //投资人
        s.investorLabel.text = e.dealer_replace;
        //投资单元
        s.investFundLabel.text = [NSString stringWithFormat:@"投资单元 %@万", e.fund];
        //
        [s.hqBtn setTitle:e.stock_name forState:UIControlStateNormal];
        //代买金额
        NSMutableString *fundStr = [NSMutableString stringWithFormat:@"%.2f", e.left_fund.floatValue];
        
        if (e.left_fund.floatValue >= 1000) {
            
           [fundStr insertString:@"," atIndex:fundStr.length - 6];
            if (e.left_fund.floatValue >= 1000000) {
                
                [fundStr insertString:@"," atIndex:fundStr.length - 10];
            }
            s.generationBuyLabel.text = fundStr;
        }
        //已买金额
        NSMutableString *buyedStr = [NSMutableString stringWithFormat:@"%.2f", e.Init_fund.floatValue];
        
        if (e.Init_fund.floatValue >= 1000) {
            
            [buyedStr insertString:@"," atIndex:buyedStr.length - 6];
            if (e.Init_fund.floatValue >= 1000000) {
                
                [buyedStr insertString:@"," atIndex:buyedStr.length - 9];
            }
            s.alreadyBuyLabel.text = buyedStr;
        }
        
        //使用率
        s.usageRatesLabel.text = [NSString stringWithFormat:@"%.2f%%", e.use_rate.floatValue * 100];
        //建仓按钮
        if (e.times != nil && e.max_times != nil) {
           
            [s.buildStrategyBtn setTitle:[NSString stringWithFormat:@"+建仓策略(%@/%@)", e.times, e.max_times] forState:UIControlStateNormal];
            
        }
        //已买股数
        s.buyedStockAmountLabel.text = [NSString stringWithFormat:@"%@股", e.amount];
        //买入
        s.buyPriceLabel.text = [NSString stringWithFormat:@"%@元",[NSString stringWithFormat:@"%.2f", e.buy_deal_price_avg.floatValue ]];
        
        if (e.profitEntity) {
            
            //现价
            s.currentPriceLabel.text = [NSString stringWithFormat:@"%@元",[NSString stringWithFormat:@"%.2f", e.profitEntity.cur_price.floatValue]];
            //涨跌
            
            NSMutableAttributedString *attrStr = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"+%.2f元", e.profitEntity.price_proift.floatValue] attributes:nil];
            [attrStr addAttribute:NSForegroundColorAttributeName value:Color_Up_Red range:NSMakeRange(0, attrStr.length - 1)];
            [s.priceFloatLabel setAttributedText:attrStr];
            
        }
        
        //按钮取数据
        s.buildStrategyBtn.tag = [[self.pAdaptor.pSources entityArray] indexOfObject:e];
        s.hqBtn.tag = [[self.pAdaptor.pSources entityArray] indexOfObject:e];
    }
}

-(void)QUAdaptor:(QUAdaptor*)adaptor willDidLoadSection:(QUSection*)section willDidLoadEntity:(QUEntity*)entity
{
    if ([section isKindOfClass:[BuildStrategyListSection class]]) {
        
        BuildStrategyListSection *s = (BuildStrategyListSection *)section;

        [s.buildStrategyBtn addTarget:self action:@selector(buildStrategyBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        [s.hqBtn addTarget:self action:@selector(hqBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        
    }
    
}

-(void)QUAdaptor:(QUAdaptor *)adaptor selectedSection:(QUSection *)section entity:(QUEntity *)entity
{
    if ([section isKindOfClass:[BuildStrategyListSection class]] && [entity isKindOfClass:[BuyingListRecordsEntity class]]) {
    
    }
}

#pragma mark - 按钮
- (void)buildStrategyBtnClicked:(UIButton *)btn
{
    //NSLog(@"按钮的tag值:%ld", (long)btn.tag);
    BuildStrategyViewController *controller = [[BuildStrategyViewController alloc] initWithNibName:@"BuildStrategyViewController" bundle:nil];
    controller.buyEntity = [[self.pAdaptor.pSources entityArray] objectAtIndex:btn.tag];
    [self.controller.navigationController.navigationController pushViewController:controller animated:NO];
}

- (void)hqBtnClicked:(UIButton *)btn
{
    BuyingListRecordsEntity *entity = [[self.pAdaptor.pSources entityArray] objectAtIndex:btn.tag];
    BuildMarketViewController *controller = [BuildMarketViewController controllerWithCode:entity.code];
    controller.buyEntity = entity;
    [self.controller.navigationController.navigationController pushViewController:controller animated:NO];
    
}


-(void)initTimer
{
    if (![[WHTimerManager shareTimerManager]hasNotifyName:kBuildProfitKey]) {
        
        [[WHTimerManager shareTimerManager] addTarget:self selector:@selector(refreshProfit) notifyName:kBuildProfitKey];
    }
}

-(void)controllerDidAppear
{
    [super controllerWillAppear];
    [self refresh];
    [self initTimer];
}

-(void)controllerDidDisappear{
    [super controllerDidDisappear];
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kBuildProfitKey];
}

-(void)show{
    [super show];
    [self initTimer];
}

-(void)hide{
    [super hide];
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kBuildProfitKey];
}


- (void)refreshTable
{
    if ([self.pAdaptor.pSources entityArrayByClass:[BuyingListRecordsEntity class]].count == 0) {
        
        [self.pAdaptor.pSources clear];
        [self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[EmptyListSection class]];
    }
    
    [self.pAdaptor.refreshHeaderView endRefreshing];
    [self.pAdaptor.refreshFooterView endRefreshing];
    [self.pAdaptor notifyChanged];
}

-(void)refreshViewBeginRefreshing:(MJRefreshComponent *)refreshView
{
    if ([refreshView isKindOfClass:[MJRefreshHeader class]]) {
        
        [self refreshBuildBuysList:@"0"];
    }
    
    if ([refreshView isKindOfClass:[MJRefreshFooter class]]) {
        
        NSString *startId = @"0";
        for (BuyingListRecordsEntity *e in [self.pAdaptor.pSources entityArrayByClass:[BuyingListRecordsEntity class]]) {
            
            startId = e.ID;
        }
        [self refreshBuildBuysList:startId];
    }
    
}

- (void)refreshBuildBuysList:(NSString *)startid
{
    DEFINED_WEAK_SELF
    [[ProductsManager shareProductsManager]getBuyingListInformationWithStartId:startid Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
       
        if (val.result && [entity isKindOfClass:[BuyingListEntity class]]) {
            
            if ([startid isEqualToString:@"0"]) {
                
                [_self.pAdaptor.pSources clear];
                //
                
            }
            for (BuyingListRecordsEntity *re in ((BuyingListEntity *)entity).records) {
                
                [_self.pAdaptor.pSources addEntity:re withSection:[BuildStrategyListSection class]];
            }
            
            
        }
        
        [_self refreshTable];
    }];
}

- (void)refresh
{
    [self refreshBuildBuysList:@"0"];
}

- (void)refreshProfit
{
    if ([[WHOnceTask shareOnceTask]expired:kBuildProfitKey validTime:kBuildProfitVal] && self.pTableView.hidden == NO) {
        
        [self getProfitData];
    }
}

- (void)getProfitData
{
    NSMutableArray *id_arr = [NSMutableArray array];
    
    for(BuyingListRecordsEntity * e in [self.pAdaptor.pSources entityArrayByClass:[BuyingListRecordsEntity class]]){
        [id_arr addObject:e.ID];
    }
    if ([id_arr count]>0) {
        DEFINED_WEAK_SELF
        [[ProductsManager shareProductsManager] refreshProfitByIds:id_arr andBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
            if (val.result && [entity isKindOfClass:[ProfitEntity class]]) {
                ProfitEntity* pe = (ProfitEntity*)entity;
                for (ProfitRecordsEntity* re in pe.records) {
                    for(BuyingListRecordsEntity * e in [_self.pAdaptor.pSources entityArrayByClass:[BuyingListRecordsEntity class]]){
                        if ([e.ID isEqualToString:re.key_id]) {
                            if (0>1) {//过滤条件
                                [_self.pAdaptor.pSources removeEntity:e];
                            }else{
                                e.profitEntity = re;
                            }
                            break;
                        }
                    }
                }
                [_self refreshTable];
            }
        }];
    }
}


-(void)dealloc
{
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kBuildProfitKey];
}


@end
