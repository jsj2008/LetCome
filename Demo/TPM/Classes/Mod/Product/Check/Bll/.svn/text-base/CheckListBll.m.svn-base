//
//  CheckListBll.m
//  TPM
//
//  Created by chenyi on 16/7/27.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "CheckListBll.h"
#import "CheckListSection.h"
#import "EmptyListSection.h"
#import "SettlementsEntity.h"
#import "CheckDetailViewController.h"
#import "DoSettleEntity.h"
#import "ProductCheckOutDeclareController.h"
@interface CheckListBll ()<QURefreshBaseViewDelegate,UIAlertViewDelegate>
@property (strong, nonatomic)  NSTimer *dissentTimer;
@property (strong, nonatomic)  NSTimer *payTimer;
@property (nonatomic,strong)NSString *flag;
@property (nonatomic,strong)CheckListSection *checkListSection;
@property (nonatomic,strong)SettlementsRecordsEntity *checkListEntity;

@end


@implementation CheckListBll

-(void)loadBll
{
    [super loadBll];
}

-(void)controllerWillAppear{
    
    [self getCheckListWithStartId:@"0"];

}

-(void)controllerDidDisappear{
    
    if (_dissentTimer) {
        [_dissentTimer invalidate];
        _dissentTimer = nil;
    }
//    if (_payTimer) {
//        [_payTimer invalidate];
//        _payTimer = nil;
//    }
}

-(void)initQuickUI:(QUTableView *)tableView{
    
    self.pAdaptor = [QUFlatAdaptor adaptorWithTableView:tableView nibArray:@[@"CheckListSection",@"EmptyListSection"] delegate:self];
    [self.pAdaptor setRefreshDelegateFooter:self];
    [self.pAdaptor setRefreshDelegateHeader:self];
    [self.pAdaptor notifyChanged];
}

-(void)getCheckListWithStartId:(NSString *)startId{


    [[ViewControllerManager sharedManager] showWaitView:self.controller.view];
    DEFINED_WEAK_SELF
    [[ProductsManager shareProductsManager]getCheckListWithStartId:startId Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        [[ViewControllerManager sharedManager] hideWaitView];
        if (val.result && [entity isKindOfClass:[SettlementsEntity class]]) {
            if ([startId isEqualToString:@"0"]) {
                [_self.pAdaptor.pSources clear];
                
            }
            
            for ( SettlementsRecordsEntity *e in ((SettlementsEntity*)entity).records) {

                [_self.pAdaptor.pSources addEntity:e withSection:[CheckListSection class]];
                
            }
            [_self.pAdaptor notifyChanged];
        }
        
        if ([_self.pAdaptor.pSources entityArrayByClass:[SettlementsRecordsEntity class]].count == 0) {
            [_self.pAdaptor.pSources clear];
            [_self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[EmptyListSection class]];
        }
        [_self.pAdaptor notifyChanged];
        
        [_self.pAdaptor.refreshHeaderView endRefreshing];
        [_self.pAdaptor.refreshFooterView endRefreshing];
    }];
}

-(void)QUAdaptor:(QUAdaptor *)adaptor willDidLoadSection:(QUSection *)section willDidLoadEntity:(QUEntity *)entity{
    
    if ([section isKindOfClass:[EmptyListSection class]]){
        EmptyListSection* s = (EmptyListSection*)section;
        [s.publishBtn addTarget:self action:@selector(gotoPublish) forControlEvents:UIControlEventTouchUpInside];
    }
    if ([section isKindOfClass:[CheckListSection class]]) {
        CheckListSection *s = (CheckListSection *)section;
        s.payBtn.layer.cornerRadius = 2.0;
        [s.detailBtn addTarget:self action:@selector(gotoDetail) forControlEvents:UIControlEventTouchUpInside];
        [s.payBtn addTarget:self action:@selector(gotoPay) forControlEvents:UIControlEventTouchUpInside];
        [s.dissentBtn addTarget:self action:@selector(gotoDissent) forControlEvents:UIControlEventTouchUpInside];
        s.payView.userInteractionEnabled = YES;
        UITapGestureRecognizer *gest = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(gotoPay)];
        [s.payView addGestureRecognizer:gest];
    }
    
}

-(void)gotoDissent{

    if ([self.flag isEqualToString:@"1"]) {
        ProductCheckOutDeclareController *controller = [[ProductCheckOutDeclareController alloc]initWithNibName:@"ProductCheckOutDeclareController" bundle:nil];
        controller.pno = self.checkListEntity.pno;
        controller.p_id = self.checkListEntity.ID;
        controller.entity=[ProductDissentListRecordsEntity entity];
        controller.entity.buy_price = self.checkListEntity.buy_deal_price_avg;
        controller.entity.sell_price = self.checkListEntity.sell_deal_price_avg;
        controller.entity.user_profit = self.checkListEntity.user_profit;
        controller.entity.stop_loss_point = self.checkListEntity.stop_profit_point;
        controller.entity.info_fee = self.checkListEntity.fee;
        controller.entity.profit = self.checkListEntity.profit;
        
        [self.controller.navigationController.navigationController pushViewController:controller animated:YES];
    }
    if ([self.flag isEqualToString:@"2"]) {
        
        [WpCommonFunction showNotifyHUDAtViewCenter:self.controller.view withErrorMessage:@"预计两个工作日内处理完成"];
        
    }
    
}
-(void)gotoDetail{

    CheckDetailViewController *controller = [[CheckDetailViewController alloc]initWithNibName:@"CheckDetailViewController" bundle:nil];
    controller.p_id = self.checkListEntity.ID;
    [self.controller.navigationController.navigationController pushViewController:controller animated:YES];
}

-(void)gotoPay{

    UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:nil message:@"是否确认付款？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确认", nil];
    [alertView show];
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    
    if (buttonIndex == 1) {
        [[ProductsManager shareProductsManager]goPayWithp_id:self.checkListEntity.ID Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
           
            if (val.result && [entity isKindOfClass:[DoSettleEntity class]]) {
                DoSettleEntity *e = (DoSettleEntity *)entity;
                if ([e.result isEqualToString:@"Y"]) {
                    [WpCommonFunction showNotifyHUDAtViewCenter:self.controller.view withErrorMessage:@"付款成功"];
                    [NSTimer scheduledTimerWithTimeInterval:2 target:self selector:@selector(hiddenPayView) userInfo:nil repeats:NO];
                    
                }else{
                    UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:nil message:@"网络异常\n请点击确定去查看是否响应成功" delegate:self cancelButtonTitle:@"确认" otherButtonTitles:nil, nil];
                    [alertView show];
                }
            }else{
            
                UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:nil message:@"网络异常\n请点击确定去查看是否响应成功" delegate:self cancelButtonTitle:@"确认" otherButtonTitles:nil, nil];
                [alertView show];
            }
        }];
    }
}


-(void)hiddenPayView{
    
    self.checkListSection.payView.hidden = YES;
    self.checkListSection.payBtn.enabled = NO;
    self.checkListSection.payBtn.backgroundColor = kColorBgBtnDisabled;
    [self.checkListSection.payBtn setTitle:@"已付款" forState:UIControlStateNormal];
    [self.checkListSection.payBtn setTitleColor:kColorTextBtnDisabled forState:UIControlStateNormal];
}
-(void)gotoPublish{
    
}

-(void)QUAdaptor:(QUAdaptor *)adaptor forSection:(QUSection *)section forEntity:(QUEntity *)entity
{
    if ([section isKindOfClass:[CheckListSection class]]) {
        CheckListSection *s = (CheckListSection *)section;
        self.checkListSection = s;
        SettlementsRecordsEntity *e = (SettlementsRecordsEntity *)entity;
        self.checkListEntity = e;
        s.lblPno.text = [NSString stringWithFormat:@"协议编号: %@",e.pno];
        if (e.create_time && ![e.create_time isEqualToString:@"0"]){
            NSDate *temp = [NSDate dateWithTimeIntervalSince1970:[e.create_time integerValue]];
            NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
            [formatter setDateStyle:NSDateFormatterMediumStyle];
            [formatter setTimeStyle:NSDateFormatterShortStyle];
            [formatter setDateFormat:@"MM-dd HH:mm"]; // ----------设置你想要的格式,hh与HH的区别:分别表示12小时制,24小时
            NSString* dateStr = [formatter stringFromDate:temp];
            s.lblCreateTime.text = [NSString stringWithFormat:@"%@",dateStr];
        }
        s.lblDealReplace.text = e.deal_replace;
        s.lblFund.text = [NSString stringWithFormat:@"投资单元 %.2f万",e.fund.floatValue/10000];
        s.lblStockName.text = e.stock_name;
//        s.lblStockName.text = [NSString stringWithFormat:@"投资单元 %@  |  %@",e.fund,e.stock_name];
        s.lblBuyDealPriceAvg.text = [NSString stringWithFormat:@"%.2f元",e.buy_deal_price_avg.floatValue];
        //提交异议申请
        if ([e.dissent_flag isEqualToString:@"1"]||[e.dissent_flag isEqualToString:@"2"]) {
            
            s.dissentBtn.hidden = NO;
            if ([e.dissent_flag isEqualToString:@"1"]) {
                self.flag = @"1";
                s.lblDissentTime.hidden = NO;
                [s.dissentBtn setTitle:@"异议申请" forState:UIControlStateNormal];
                [s.dissentBtn setTitleColor:Color_Bg_RGB(80, 140, 240) forState:UIControlStateNormal];
                
                _dissentTimer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(showTime:) userInfo:nil repeats:YES];
                [[NSRunLoop currentRunLoop] addTimer:_dissentTimer forMode:UITrackingRunLoopMode];
            }else{
                
                self.flag = @"2";
                s.lblDissentTime.hidden = YES;
                [s.dissentBtn setTitle:@"异议处理中" forState:UIControlStateNormal];
                [s.dissentBtn setTitleColor:Color_Bg_RGB(255, 120, 20) forState:UIControlStateNormal];
            }
        }else{
        
            s.dissentBtn.hidden = YES;
            s.lblDissentTime.hidden = YES;
        }
//        s.dissentBtn.hidden = NO;
//        self.flag = @"1";
//        s.lblDissentTime.hidden = NO;
//        [s.dissentBtn setTitle:@"异议申请" forState:UIControlStateNormal];
//        [s.dissentBtn setTitleColor:Color_Bg_RGB(80, 140, 240) forState:UIControlStateNormal];
//        
//        _dissentTimer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(showTime:) userInfo:nil repeats:YES];
//         [[NSRunLoop currentRunLoop] addTimer:_dissentTimer forMode:UITrackingRunLoopMode];
        
        if ([e.state isEqualToString:@"0"]) {
            //账单生成中
            s.lblProfit.text = @"— —";
            s.lblSellDealPriceAvg.text = @"— —元";
            s.lblAmount.text = @"— —股";
            s.lblUserProfit.text = @"— —";
            s.lblUserProfit.textColor = Color_Bg_RGB(204, 204, 204);
            s.lblBreakCost.text = @"— —元";
            s.lblBreakCost.textColor = Color_Bg_RGB(204, 204, 204);
            s.lblShareProfit.text = @"— —元";
            s.lblShareProfit.textColor = Color_Bg_RGB(204, 204, 204);
            s.lblShareLoss.text = @"— —元";
            s.lblShareLoss.textColor = Color_Bg_RGB(204, 204, 204);
            
        }else{
        
            s.lblProfit.text = [NSString stringWithFormat:@"%.2f",e.profit.floatValue];
            s.lblProfit.textColor = Color_Bg_RGB(255, 255, 255);
            s.lblSellDealPriceAvg.text = [NSString stringWithFormat:@"%.2f元",e.sell_deal_price_avg.floatValue];
            s.lblSellDealPriceAvg.textColor = Color_Bg_RGB(255, 255, 255);
            s.lblAmount.text = [NSString stringWithFormat:@"%d股",e.amount.intValue];
            s.lblAmount.textColor = Color_Bg_RGB(255, 255, 255);
            s.lblUserProfit.text = [NSString stringWithFormat:@"%.2f",e.user_profit.floatValue];
            if ([e.user_profit hasPrefix:@"-"]) {
                s.lblUserProfit.textColor = Color_Down_Green;
            }else{
            
                s.lblUserProfit.textColor = Color_Up_Red;
            }
            s.lblBreakCost.text = [NSString stringWithFormat:@"%.2f元",e.break_cost.floatValue];
            s.lblBreakCost.textColor = Color_Bg_RGB(153, 153, 153);
            s.lblShareLoss.textColor = Color_Bg_RGB(153, 153, 153);
            s.lblShareProfit.textColor = Color_Bg_RGB(153, 153, 153);
            if (e.share_profit.floatValue>=0) {
                s.lblShareProfit.text = [NSString stringWithFormat:@"%.2f元",e.share_profit.floatValue];
                s.lblShareLoss.text = @"0元";
            }else{
                
                s.lblShareProfit.text = @"0元";
                s.lblShareLoss.text = [NSString stringWithFormat:@"%.2f元",e.share_profit.floatValue];
            }
        }
        //支付按钮的显示
        if ([e.state isEqualToString:@"2"]) {
            if ([self.flag isEqualToString:@"2"]) {
                s.payBtn.enabled = YES;
                s.payView.hidden = YES;
                s.payBtn.backgroundColor = Color_Bg_RGB(80, 140, 240);
                [s.payBtn  setTitle:e.state_name forState:UIControlStateNormal];
                [s.payBtn setTitleColor:Color_Bg_RGB(255, 255, 255) forState:UIControlStateNormal];
            }else{
                s.payView.hidden = NO;
                s.payBtn.backgroundColor = Color_Bg_RGB(80, 140, 240);
                [s.payBtn setTitle:@"" forState:UIControlStateNormal];
                s.payBtn.enabled = YES;
                _payTimer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(showTime:) userInfo:nil repeats:YES];
                [[NSRunLoop currentRunLoop] addTimer:_payTimer forMode:UITrackingRunLoopMode];
            }
        }else{
            s.payBtn.enabled = NO;
            s.payView.hidden = YES;
            s.payBtn.backgroundColor = kColorBgBtnDisabled;
            [s.payBtn  setTitle:e.state_name forState:UIControlStateNormal];
            [s.payBtn setTitleColor:kColorTextBtnDisabled forState:UIControlStateNormal];
        }

//        s.payView.hidden = NO;
//        s.payBtn.backgroundColor = Color_Bg_RGB(80, 140, 240);
//        [s.payBtn setTitle:@"" forState:UIControlStateNormal];
//        s.payBtn.enabled = YES;
    }
}

//获取付款倒计时的秒数
-(NSUInteger )getPayTime:(NSString *)payEndTime{

    NSInteger serverTime = [[ProductsManager shareProductsManager]getServerTime];
    NSDate *severDate = [NSDate dateWithTimeIntervalSince1970:serverTime];
    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
    [formatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSDate *timeDate = [NSDate dateWithTimeIntervalSince1970:payEndTime.integerValue];
    NSTimeInterval aTimer = [timeDate timeIntervalSinceDate:severDate];
    return aTimer;
    
}

//获取异议申请倒计时的秒数
-(NSUInteger )getDissentTime{
    
    NSInteger serverTime = [[ProductsManager shareProductsManager]getServerTime];
    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
    [formatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSDate *severDate = [NSDate dateWithTimeIntervalSince1970:serverTime];
    NSString *serverStr = [formatter stringFromDate:severDate];
    NSString *server = [serverStr substringToIndex:10];
    NSString *timeStr =[NSString stringWithFormat:@"%@ 23:59:59",server];
    NSDate *timeDate = [formatter dateFromString:timeStr];
    NSTimeInterval aTimer = [timeDate timeIntervalSinceDate:severDate];

    return aTimer;
}

//显示倒计时
-(void)showTime:(NSTimer *)time{
    
    NSUInteger payTime = [self getPayTime:self.checkListEntity.pay_end_time];
//    NSUInteger payTime = [self getDissentTime];
    self.checkListSection.lblPayTime.text = [NSString stringWithFormat:@"%@",[self lessSecondToDay:--payTime AndFlag:1]];
    NSUInteger dissentTime = [self getDissentTime];
    self.checkListSection.lblDissentTime.text = [NSString stringWithFormat:@"%@",[self lessSecondToDay:--dissentTime AndFlag:2]];

}

-(NSString *)lessSecondToDay:(NSUInteger)seconds AndFlag:(int)flag{

    if (flag == 1) {
        if (seconds == 0) {
            self.checkListSection.payBtn.enabled = NO;
            self.checkListSection.payBtn.backgroundColor = kColorBgBtnDisabled;
        }
    }
    int hour = (int)seconds/3600;
    int min  = (int)(seconds - hour*3600)/60;
    int second = (int)seconds - hour*3600 - min*60;
    
    NSString *time = [NSString stringWithFormat:@"%02d:%02d:%02d",hour,min,second];
    return time;
}


// 开始进入刷新状态就会调用
- (void)refreshViewBeginRefreshing:(MJRefreshComponent *)refreshView{
    if ([refreshView isKindOfClass:[MJRefreshHeader class]]) {
        [self getCheckListWithStartId:@"0"];
    }
    if ([refreshView isKindOfClass:[MJRefreshFooter class]]) {
        NSString *startid = @"0";
        for(SettlementsRecordsEntity * e in [self.pAdaptor.pSources entityArrayByClass:[SettlementsRecordsEntity class]]){
            startid =  e.ID;
        }
        [self getCheckListWithStartId:startid];
    }
}

@end
