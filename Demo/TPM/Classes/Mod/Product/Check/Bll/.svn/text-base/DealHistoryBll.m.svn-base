//
//  DealHistoryBll.m
//  TPM
//
//  Created by chenyi on 16/7/27.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "DealHistoryBll.h"
#import "DealHistorySection.h"
#import "DealHistoryEntity.h"
#import "DealHistoryViewController.h"
#import "EmptyListSection.h"
@interface DealHistoryBll ()


@end

@implementation DealHistoryBll

-(void)loadBll
{
    [super loadBll];
}

-(void)controllerWillAppear{
    
    DealHistoryViewController *controller = (DealHistoryViewController *)self.controller;
    [[ViewControllerManager sharedManager] showWaitView:self.controller.view];
    DEFINED_WEAK_SELF
    [[ProductsManager shareProductsManager]getDealHistoryWithP_id:controller.p_id AndType:controller.type Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        [[ViewControllerManager sharedManager] hideWaitView];
        if (val.result && [entity isKindOfClass:[DealHistoryEntity class]]) {
            
            for ( DealHistoryRecordsEntity *e in ((DealHistoryEntity*)entity).records) {
                [_self.pAdaptor.pSources addEntity:e withSection:[DealHistorySection class]];
                
            }
            [_self.pAdaptor notifyChanged];
        }
        
    }];
}

-(void)initQuickUI:(QUTableView *)tableView{
    
    self.pAdaptor = [QUFlatAdaptor adaptorWithTableView:tableView nibArray:@[@"DealHistorySection"] delegate:self];
//    [self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[DealHistorySection class]];
    [self.pAdaptor notifyChanged];
}

-(void)QUAdaptor:(QUAdaptor *)adaptor willDidLoadSection:(QUSection *)section willDidLoadEntity:(QUEntity *)entity{

    if ([section isKindOfClass:[DealHistorySection class]]) {
        DealHistorySection *s = (DealHistorySection *)section;
        DealHistoryRecordsEntity *e = (DealHistoryRecordsEntity *)entity;
        s.lblTypeName.text = e.type_name;
        NSDate *temp = [NSDate dateWithTimeIntervalSince1970:[e.deal_time integerValue]];
        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
        [formatter setDateStyle:NSDateFormatterMediumStyle];
        [formatter setTimeStyle:NSDateFormatterShortStyle];
        s.lblDealFundName.text = @"成交金额";
        s.lblDealPrice.text = [NSString stringWithFormat:@"%.2f元",e.deal_price.floatValue];
        s.lblDealPrice.textColor = Color_Bg_222222;
        s.lblDealAmount.text = [NSString stringWithFormat:@"%d股",e.deal_amount.intValue];
        s.lblDealAmount.textColor = Color_Bg_222222;
        NSNumberFormatter *numberFormatter = [[NSNumberFormatter alloc] init];
        [numberFormatter setPositiveFormat:@"###,##0.00;"];
        NSNumber *dealFund = [NSNumber numberWithDouble:[e.deal_fund doubleValue]];
        s.lblDealFund.text = [NSString stringWithFormat:@"%@",[numberFormatter stringFromNumber:dealFund]];
        s.lblDealFund.textColor = Color_Bg_222222;
        //时间样式的显示
        if ([e.type_name isEqualToString:@"平仓策略"]||[e.type_name isEqualToString:@"建仓策略"]) {
            
            [formatter setDateFormat:@"MM-dd HH:mm"]; // ----------设置你想要的格式,hh与HH的区别:分别表示12小时制,24小时
            s.lblStateName.hidden = NO;
            s.lblStateName.text = e.state_name;
            s.lblStateName.textColor = Color_Bg_757575;
            
        }else{
            
            [formatter setDateFormat:@"MM-dd"];
            s.lblStateName.hidden = YES;
        }
        s.lblDealTime.text = [NSString stringWithFormat:@"%@",[formatter stringFromDate:temp]];
        //建仓策略
        if ([e.sell_buy isEqualToString:@"1"]) {
            s.lblDealAmountName.text = @"买入股数";
            s.lblDealPriceName.text = @"买入价";
            if ([e.state_name isEqualToString:@"买入失败"]) {
                s.lblStateName.text = e.state_name;
                s.lblStateName.textColor = Color_Bg_RGB(255, 120, 20);
                s.lblDealPrice.text = @"— —元";
                s.lblDealPrice.textColor = Color_Bg_RGB(204, 204, 204);
                s.lblDealAmount.text = @"— —股";
                s.lblDealAmount.textColor = Color_Bg_RGB(204, 204, 204);
                s.lblDealFund.text = @"— —";
                s.lblDealFund.textColor = Color_Bg_RGB(204, 204, 204);
                
            }
        }else{
        //平仓策略
            if ([e.type_name isEqualToString:@"红利"]) {
                s.lblDealPriceName.text = @"每股红利";
                s.lblDealAmountName.text = @"红利股数";
                s.lblDealFundName.text = @"红利金额";
            }else{
                
                s.lblDealPriceName.text = @"卖出价";
                s.lblDealAmountName.text = @"卖出股数";
            }
        }
    }
}
@end
