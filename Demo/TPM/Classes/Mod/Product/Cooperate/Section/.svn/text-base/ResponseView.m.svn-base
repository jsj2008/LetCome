//
//  ResponseView.m
//  TPM
//
//  Created by tongshangren on 16/8/1.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "ResponseView.h"
#import "PolicyStatusEntity.h"


@interface ResponseView()<UIAlertViewDelegate>
@property(nonatomic,assign)int count;
@end


@implementation ResponseView


-(void)awakeFromNib{
    
    int winwidth=[UIScreen mainScreen].bounds.size.width;
    int winheight=[UIScreen mainScreen].bounds.size.height;
    
    self.frame=CGRectMake(0, 0, winwidth, winheight);
    
    [self.viewWait.layer setCornerRadius:5.0];
    self.viewWait.layer.masksToBounds=YES;
    
    [self.btnStart.layer setCornerRadius:2.0];
    self.btnStart.layer.masksToBounds=YES;
    
    [self.btnClose addTarget:self action:@selector(closeFunc) forControlEvents:UIControlEventTouchUpInside];
//    [self.btnStart addTarget:self action:@selector(startFunc) forControlEvents:UIControlEventTouchUpInside];
    
    self.count=15;
}

-(void)delayEnabledBtn:(UIButton *)btn{
    [btn setEnabled:NO];
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [btn setEnabled:YES];
    });
}

-(void)startFunc{
    
    [self delayEnabledBtn:self.btnStart];
    
    self.viewStart.hidden=YES;
    self.viewWait.hidden=NO;
    
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kStrategyRefresh];

    [[WHTimerManager shareTimerManager]addTarget:self selector:@selector(refreshResponse) notifyName:kStrategyRefresh];

}


-(void)refreshResponse{
    
    self.count--;
    

    
    if (self.count<0) {
        self.count=0;

        [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kStrategyRefresh];
        [self connectError];
        return;
    }
    
    
    if ([[WHOnceTask shareOnceTask]expired:kStrategyRefresh validTime:kStrategyRefreshVal]) {
        if (self.count%3==0) {
           [self getResponse];
        }
    }
}



-(void)getResponse{
    
    DEFINED_WEAK_SELF

    
    [[ProductsManager shareProductsManager]checkPolicyStatusByID:self.pidString Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        if ([entity isKindOfClass:[PolicyStatusEntity class]]) {
            int process = 0,state = 0,detail = 0;
            PolicyStatusEntity *e=(PolicyStatusEntity *)entity;
            process = [e.process intValue];
            state = [e.state intValue];
            
            if (state==2) {
                [_self failed];
            }
            if (state==1) {
                [_self success];
            }
        }
    }];
    

  
}



-(void)success{
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kStrategyRefresh];
    self.count=0;
    [self removeFromSuperview];
    NSString *success_content=[NSString stringWithFormat:@"你与投资人%@的策略合作成功",self.investor_code];
    UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"合作成功！" message:success_content delegate:self cancelButtonTitle:@"确认" otherButtonTitles:nil, nil];
    alert.tag=100;
    [alert show];
    
}


-(void)failed{
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kStrategyRefresh];
    self.count=0;
    [self removeFromSuperview];
    UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"合作失败！" message:@"很遗憾，因投资人响应超时，你的策略合作未成功" delegate:nil cancelButtonTitle:@"确认" otherButtonTitles:nil, nil];
    alert.tag=100;
    [alert show];
    
}



-(void)connectError{
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kStrategyRefresh];
    self.count=0;
    [self removeFromSuperview];
    UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"网络异常" message:@"请点击确定去查看是否响应成功" delegate:self cancelButtonTitle:@"确认" otherButtonTitles:nil, nil];
    alert.tag=101;
    [alert show];
}


-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    [self.controller.navigationController popToRootViewControllerAnimated:NO];
    [self removeFromSuperview];
    IndexViewController *index=[AppUtil findIndex];
    [index go2Strategy:NO];
}




-(void)closeFunc{
    [self removeFromSuperview];
}


-(void)dealloc{
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kStrategyRefresh];
    NSLog(@"responseView released");
}

@end
