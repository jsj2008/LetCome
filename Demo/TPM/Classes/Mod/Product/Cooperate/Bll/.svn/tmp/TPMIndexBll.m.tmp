//
//  TPMIndexBll.m
//  TPM
//
//  Created by tongshangren on 16/7/27.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "TPMIndexBll.h"
#import "TPMIndexSection.h"
#import "InfomationManager.h"
#import "AdEntity.h"
#import "ScrollNoticeEntity.h"
#import "MyWebViewController.h"
#import "TradeCostStatisticsEntity.h"
#import "ScrollTradeInfoEntity.h"
#import <SDWebImage/UIImageView+WebCache.h>
#import "PushManager.h"
#import "PopupMsgEntity.h"
#import "AgreementFunction.h"
#import "STODBManager.h"

#import "TPMIndexTableViewCell.h"
#import "STOSearchViewController.h"
#import "TPMDetailViewController.h"

#import <QuartzCore/QuartzCore.h>
#import "MJRefresh.h"
#import "PolicyListEntity.h"


@interface TPMIndexBll()<UITableViewDataSource,UITableViewDelegate>
@property(nonatomic,strong)TPMTableSection *tableSection;
@property(nonatomic,strong)TPMIndexSection *indexSection;
@property(nonatomic,strong)NSMutableArray *cellArray;
@property(nonatomic,assign)int minID;
@property(nonatomic,assign)int maxID;
@end



@implementation TPMIndexBll

-(void)loadBll{
    [super loadBll];
    self.cellArray=[[NSMutableArray alloc]initWithCapacity:0];

}

-(void)controllerWillAppear{
    [self initTime];
    DEFINED_WEAK_SELF
    [[InfomationManager shareInfomationManager] getAd:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        if (val) {
            _self.advs = ((AdEntity*)entity).records;
            [_self.pAdaptor notifyChanged];
        }
    }];
   // [self refreshTradeInfo];
    
}

-(void)controllerDidAppear{
    [self initTime];
    
}

-(void)controllerDidDisappear{
    [[WHTimerManager shareTimerManager] removeTarget:self notifyName:kHomeHqRefresh];
}

-(void)initTime{
    if (![[WHTimerManager shareTimerManager] hasNotifyName:kHomeHqRefresh]) {
        [[WHTimerManager shareTimerManager] addTarget:self selector:@selector(refreshHq) notifyName:kHomeHqRefresh];
    }
}


-(void)refreshHq{
    if ([[WHOnceTask shareOnceTask]expired:kHomeHqKey validTime:kHomeHqVal]) {
        NSString *code = @"399001;399006";//中小板指、创业版指、沪深300
        DEFINED_WEAK_SELF
        [[ProductsManager shareProductsManager ] refreshHQWithCode:code Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity){
            if (val) {
                HqEntity *e = (HqEntity*)entity;
                for (HqRecordsEntity* record in e.records ) {
                    if([record.stockcode isEqualToString:@"399001"]) {
                        _self.hqSzEntity =record;
                    }else if([record.stockcode isEqualToString:@"399006"]) {
                        _self.hqCyEntity =record;
                    }
                }
                
                [_self handleHqWithNew:_self.hqSzEntity.New yClose:_self.hqSzEntity.YClose priceLabel:_self.indexSection.lblSzIndex rateLabel:_self.indexSection.lblSzDetail];
                [_self handleHqWithNew:_self.hqCyEntity.New yClose:_self.hqCyEntity.YClose priceLabel:_self.indexSection.lblCyIndex rateLabel:_self.indexSection.lblCyDetail];
                
                
                //[_self.pAdaptor notifyChanged];
            }
            
            [[ProductsManager shareProductsManager ] refreshSHHQWithBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity){
                if (val) {
                    ProductPanKouEntity *e = (ProductPanKouEntity*)entity;
                    _self.hqShEntity = e;
                    [_self handleHqWithNew:_self.hqShEntity.New yClose:_self.hqShEntity.YClose  priceLabel:_self.indexSection.lblShIndex rateLabel:_self.indexSection.lblShDetail];
                }
            }];
        }];
        
    }
    if ([[WHOnceTask shareOnceTask]expired:kScrollAdvKey validTime:kScrollAdvVal]) {
        [adSection scrollToNext];
    }

}

-(void)handleHqWithNew:(NSString*)New yClose:yClose  priceLabel:(UILabel*)priceLabel rateLabel:(UILabel*)rateLabel{
    if (New) {
        UIColor *color = [AppUtil colorWithOpen:[yClose floatValue] andNew:[New floatValue]];
        priceLabel.textColor = color;
        rateLabel.textColor = color;
        priceLabel.text = [AppUtil price:New];
        float minus = [New floatValue] - [yClose floatValue];
        NSString *minusPrice = [AppUtil price:[NSString stringWithFormat:@"%f",minus]];
        NSString *rate = [NSString stringWithFormat:@"%.2f%%",([New floatValue] - [yClose floatValue])/[yClose floatValue]*100];
        if (minus>0) {
            rateLabel.text = [NSString stringWithFormat:@"+%@ +%@",minusPrice,rate];
        }else{
            rateLabel.text = [NSString stringWithFormat:@"%@ %@",minusPrice,rate];
        }
    }
}





-(void)initQuickUI:(QUTableView *)tableView{
    if (iPhone6 || iPhone6Plus) {
        tableView.scrollEnabled = NO;
    }
    self.pAdaptor = [QUFlatAdaptor adaptorWithTableView:tableView nibArray:@[@"TPMIndexSection"] delegate:self backGroundClr:[UIColor colorWithRed:244.0/255.0 green:244.0/255.0 blue:244.0/255.0 alpha:1.0]];
    
    QUEntity *entity= [QUEntity entity];
    entity.tag = 100;
    [self.pAdaptor.pSources addEntity:entity withSection:[TPMAdSection class]];
    [self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[TPMIndexSection class]];
    
    [self.pAdaptor.pSources addEntity:[QUEntity entity] withSection:[TPMTableSection class]];
    
    self.pAdaptor.pTableView.scrollEnabled = YES;
    
    [self.pAdaptor notifyChanged];
}


-(void)QUAdaptor:(QUAdaptor *)adaptor forSection:(QUSection *)section forEntity:(QUEntity *)entity{
    
    if ([section isKindOfClass:[TPMAdSection class]]) {
        TPMAdSection *s = (TPMAdSection *)section;
        adSection = s;
        if(_advs){
            [s loadAdvs:_advs];
        }
    }
    
    if ([section isKindOfClass:[TPMIndexSection class]]) {
        TPMIndexSection *s = (TPMIndexSection *)section;
        self.indexSection=(TPMIndexSection *)section;
        
        UITapGestureRecognizer *gesture=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(searchClicked)];
        [self.indexSection.searchFrame addGestureRecognizer:gesture];
        
//        [self handleHq:self.hqShEntity priceLabel:s.lblShIndex rateLabel:s.lblShDetail];
//        [self handleHq:self.hqSzEntity priceLabel:s.lblSzIndex rateLabel:s.lblSzDetail];
//        [self handleHq:self.hqCyEntity priceLabel:s.lblCyIndex rateLabel:s.lblCyDetail];
    }

    

}



-(void)searchClicked{
    STOSearchViewController *search = [[STOSearchViewController alloc] initWithNibName:@"STOSearchViewController" bundle:nil];
    
    CATransition* transition = [CATransition animation];
    transition.type = kCATransitionPush;//可更改为其他方式
    transition.subtype = kCATransitionFromTop;//可更改为其他方式
    [self.controller.navigationController.navigationController.view.layer addAnimation:transition forKey:kCATransition];
    [self.controller.navigationController.navigationController pushViewController:search animated:NO];
}


-(void)getPolicyListByID:(NSString *)ID{
    DEFINED_WEAK_SELF

    [self.cellArray removeAllObjects];
    [[ProductsManager shareProductsManager]getPolicyListByCode:@"0" startID:ID limit:@"1" block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        if ([entity isKindOfClass:[PolicyListEntity class]]) {
            PolicyListEntity *e=(PolicyListEntity *)entity;
            if (e.records.count) {
                self.maxID=[((PolicyListRecordsEntity *)[e.records objectAtIndex:0]).ID intValue];
                self.minID=self.maxID;
                for (PolicyListRecordsEntity *en in e.records) {
                    [_self.cellArray addObject:en];
                    
                    if ([en.ID intValue]>_self.maxID) {
                        _self.maxID=[en.ID intValue];
                    }
                    if ([en.ID intValue]<_self.minID) {
                        _self.minID=[en.ID intValue];
                    }
                    
                }
            }
            [_self.tableSection.tableView reloadData];
        }
        [self.tableSection.tableView.footer endRefreshing];
        [self.tableSection.tableView.header endRefreshing];
    }];
}



-(void)QUAdaptor:(QUAdaptor *)adaptor willDidLoadSection:(QUSection *)section willDidLoadEntity:(QUEntity *)entity{
    if ([section isKindOfClass:[TPMTableSection class]]) {
        self.tableSection=(TPMTableSection *)section;

        
        self.tableSection.tableView.delegate=self;
        self.tableSection.tableView.dataSource=self;
        [self getPolicyListByID:@"0"];
        
        
        
        DEFINED_WEAK_SELF
        MJRefreshNormalHeader *headerView = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
            [_self loadLastData];
        }];
        MJRefreshBackNormalFooter *footerView = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
            [_self loadNextData];
        }];
        
        NSString * MJRefreshFooterPullToRefresh = @"上拉即可翻页";
        NSString * MJRefreshFooterReleaseToRefresh = @"释放即可翻页";
        NSString * MJRefreshFooterRefreshing = @"加载中";
        
        NSString * MJRefreshHeaderPullToRefresh = @"下拉即可刷新";
        NSString * MJRefreshHeaderReleaseToRefresh = @"释放即可刷新";
        NSString * MJRefreshHeaderRefreshing = @"加载中";
        [headerView setTitle:MJRefreshHeaderPullToRefresh forState:MJRefreshStateIdle];
        [headerView setTitle:MJRefreshHeaderReleaseToRefresh forState:MJRefreshStatePulling];
        [headerView setTitle:MJRefreshHeaderRefreshing forState:MJRefreshStateRefreshing];
        headerView.lastUpdatedTimeLabel.hidden = YES;
        
        [footerView setTitle:MJRefreshFooterPullToRefresh forState:MJRefreshStateIdle];
        [footerView setTitle:MJRefreshFooterReleaseToRefresh forState:MJRefreshStatePulling];
        [footerView setTitle:MJRefreshFooterRefreshing forState:MJRefreshStateRefreshing];
        
        self.tableSection.tableView.mj_header=headerView;
        self.tableSection.tableView.mj_footer=footerView;

    }
}






-(void)loadLastData{
    NSLog(@"loadLastData");
//    [self.tableSection.tableView.header endRefreshing];
    
    [self getPolicyListByID:[NSString stringWithFormat:@"-%d",self.minID]];
}

-(void)loadNextData{
    NSLog(@"loadNextData");
//    [self.tableSection.tableView.footer endRefreshing];
    
    [self getPolicyListByID:[NSString stringWithFormat:@"%d",self.maxID]];
}


-(void)go2detail:(NSString *)scheme_id{
    TPMDetailViewController *detailVC=[[TPMDetailViewController alloc]initWithNibName:@"TPMDetailViewController" bundle:nil];
    detailVC.scheme_id=scheme_id;
    [self.controller.navigationController.navigationController pushViewController:detailVC animated:YES];
}



-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return[self.cellArray count];
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    TPMIndexTableViewCell * cell = [tableView dequeueReusableCellWithIdentifier:@"TPMIndexTableViewCell"];
    if (!cell)
    {
        [tableView registerNib:[UINib nibWithNibName:@"TPMIndexTableViewCell" bundle:nil] forCellReuseIdentifier:@"TPMIndexTableViewCell"];
        cell = [tableView dequeueReusableCellWithIdentifier:@"TPMIndexTableViewCell"];
    }
    
//    [cell.btnStrategy addTarget:self action:@selector(go2strategy) forControlEvents:UIControlEventTouchUpInside];
    
    PolicyListRecordsEntity *e=[self.cellArray objectAtIndex:indexPath.row];
    cell.lblUserID.text=e.dealer_replace;
    cell.lblFund.text=e.fund;
    cell.lblStockName.text=e.stock_name;
    cell.lblTimeLeft.text=e.end_time_str;
    cell.lblState.text=e.fund_str;
    return cell;
}


-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    PolicyListRecordsEntity *e=(PolicyListRecordsEntity *)[self.cellArray objectAtIndex:indexPath.row];
    [self go2detail:e.ID];
}


-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 110;
}



@end
