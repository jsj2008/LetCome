//
//  STOManager.m
//  STO
//
//  Created by  rjt on 16/3/22.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "STOManager.h"

@implementation STOManager
+(instancetype)managerWithEntity:(STOSearchEntity *)entity{
    STOManager* m = [[self alloc] initWithEntity:entity];
    return m;
}

-(instancetype)initWithEntity:(STOSearchEntity*)entity{
    if (self = [super init]) {
        self.stoEntity = entity;
        [self initMock];
    }
    return self;
}

-(void)initMock{
    self.hqMock = [HqMock mock];
    self.hqParam = [HqParam param];
    self.pankouMock = [ProductPanKouMock mock];
    self.pankouParam = [ProductPanKouParam param];
    self.chartMock = [ProductChartMock mock];
    self.chartParam = [ProductChartParam param];
    
    self.volchartMock = [ProductVolChartMock mock];
    self.volchartParam = [ProductVolChartParam param];
    
    self.kChartMock = [ProductKChartMock mock];
    self.kChartParam = [ProductKChartParam param];
    self.min30KChartMock = [ProductMinKChartMock mock];
    self.min30KChartParam = [ProductMinKChartParam param];
    self.min5KChartMock = [ProductMinKChartMock mock];
    self.min5KChartParam = [ProductMinKChartParam param];
    self.min15KChartMock = [ProductMinKChartMock mock];
    self.min15KChartParam = [ProductMinKChartParam param];
    self.min60KChartMock = [ProductMinKChartMock mock];
    self.min60KChartParam = [ProductMinKChartParam param];
}

/** 刷新行情 **/
-(void)refreshHq:(ManagerReturnBlock)returnBlock{
    self.hqParam.code = self.stoEntity.stockCode;
    self.hqMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if([response.pEntity isKindOfClass:[HqEntity class]]){
            
            _hqEntity = (HqEntity*)response.pEntity;
        }
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.hqMock run:self.hqParam];
}

/** 刷新盘口**/
-(void)refreshPankou:(ManagerReturnBlock)returnBlock{
    self.pankouParam.code = self.stoEntity.stockCode;
    self.pankouMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.pankouMock run:self.pankouParam ignoreError:YES];
}

/** 刷新分时图**/
-(void)refreshChart:(ManagerReturnBlock)returnBlock{
    self.chartParam.code = self.stoEntity.stockCode;
    self.chartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.chartMock run:self.chartParam ignoreError:YES];
}

/** 刷新交易量图**/
-(void)refreshVolChart:(ManagerReturnBlock)returnBlock{
    self.volchartParam.code = self.stoEntity.stockCode;
    self.volchartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.volchartMock run:self.volchartParam ignoreError:YES];
}

/** 刷新K线图**/
-(void)refreshKChart:(ManagerReturnBlock)returnBlock{
    self.kChartParam.code = self.stoEntity.stockCode;
    self.kChartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.kChartMock run:self.kChartParam ignoreError:YES];
}
/** 刷新K线图**/
-(void)refreshMin30KChart:(ManagerReturnBlock)returnBlock{
    self.min30KChartParam.code = self.stoEntity.stockCode;
    self.min30KChartParam.min = @"30";
    self.min30KChartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.min30KChartMock run:self.min30KChartParam ignoreError:YES];
}

-(void)refreshMin5KChart:(ManagerReturnBlock)returnBlock{
    self.min5KChartParam.code = self.stoEntity.stockCode;
    self.min5KChartParam.min = @"5";
    self.min5KChartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.min5KChartMock run:self.min5KChartParam ignoreError:YES];
}

-(void)refreshMin15KChart:(ManagerReturnBlock)returnBlock{
    self.min15KChartParam.code = self.stoEntity.stockCode;
    self.min15KChartParam.min = @"15";
    self.min15KChartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.min15KChartMock run:self.min15KChartParam ignoreError:YES];
}

-(void)refreshMin60KChart:(ManagerReturnBlock)returnBlock{
    self.min60KChartParam.code = self.stoEntity.stockCode;
    self.min60KChartParam.min = @"60";
    self.min60KChartMock.returnBlock = ^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.min60KChartMock run:self.min60KChartParam ignoreError:YES];
}


@end
