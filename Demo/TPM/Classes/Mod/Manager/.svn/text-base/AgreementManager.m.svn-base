//
//  AgreementManager.m
//  STO
//
//  Created by tongshangren on 16/3/28.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "AgreementManager.h"

@implementation AgreementManager
static AgreementManager *_agreementManager = nil;
+(AgreementManager *)shareAgreementManager
{
    if (_agreementManager == nil) {
        _agreementManager = [[self alloc]init];
        [_agreementManager initMock];
    }
    return _agreementManager;
}

-(void)initMock{
    self.getuserUnsignedAgreementMock = [GetuserUnsignedAgreementMock mock];
    self.getuserUnsignedAgreementParam = [GetuserUnsignedAgreementParam param];
    
    self.getAgreementInfoMock = [GetAgreementInfoMock mock];
    self.getAgreementInfoParam = [GetAgreementInfoParam param];
    
    self.signAgreementMock = [SignAgreementMock mock];
    self.signAgreementParam = [SignAgreementParam param];
    
    self.articleListMock = [ArticleListMock mock];
    self.articleListParam = [ArticleListParam param];
    
    self.articleContentMock = [ArticleContentMock mock];
    self.articleContentParam = [ArticleContentParam param];
    
    self.signedArticleContentMock = [SignedArticleContentMock mock];
    self.signedArticleContentParam = [SignedArticleContentParam param];
    
    self.signedArticleListMock = [SignedArticleListMock mock];
    self.signedArticleListParam = [SignedArticleListParam param];
    
    self.userAgreementListMock = [UserAgreementListMock mock];
    self.userAgreementListParam = [UserAgreementListParam param];
}


/** 检查是否签署协议 **/
-(void)getuserUnsignedAgreementWithType:(NSString *)prd_type block:(ManagerReturnBlock)returnBlock{
    self.getuserUnsignedAgreementParam.prd_type=prd_type;
    self.getuserUnsignedAgreementParam.user_type=@"1";
    
    self.getuserUnsignedAgreementMock.returnBlock =^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.getuserUnsignedAgreementMock run:self.getuserUnsignedAgreementParam];
}

//根据id获取协议内容
-(void)getAgreementInfoWithID:(NSString *)ID block:(ManagerReturnBlock)returnBlock{
    
    self.getAgreementInfoParam.ID=ID;
    self.getAgreementInfoMock.returnBlock =^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.getAgreementInfoMock run:self.getAgreementInfoParam];
}


//根据id签署协议
-(void)signAgreementWithID:(NSString *)ID block:(ManagerReturnBlock)returnBlock{
    
    self.signAgreementParam.ID=ID;
    self.signAgreementMock.returnBlock =^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.signAgreementMock run:self.signAgreementParam];
}


/** 获取协议列表 **/
-(void)getArticleList:(ManagerReturnBlock)returnBlock{
    self.articleListParam.user_type=@"1";
    self.articleListMock.returnBlock =^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.articleListMock run:self.articleListParam];
    
}


/** 协议合约内容取得 **/
-(void)getArticleContentByID:(NSString *)ID
                  nickname_t:(NSString *)nickname_t
                       uid_t:(NSString *)uid_t
                   scheme_id:(NSString *)scheme_id
                       Block:(ManagerReturnBlock)returnBlock{
    self.articleContentParam.ID=ID;
    self.articleContentParam.nickname_t=nickname_t;
    self.articleContentParam.uid_t=uid_t;
    self.articleContentParam.scheme_id=scheme_id;
    self.articleContentMock.returnBlock =^(QUNetAdaptor *adaptor,QUNetResponse *response,AppMock *mock){
        if(returnBlock!=nil){
            returnBlock([BaseManager convertResult:adaptor response:response],mock,response.pEntity);
        }
    };
    [self.articleContentMock run:self.articleContentParam];
}


@end






