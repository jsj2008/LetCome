//
//  ProductsManager
//  STO
//
//  Created by  rjt on 16/3/22.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "BaseManager.h"
#import "HqMock.h"
#import "GetTimeMock.h"
#import "ProductListEntity.h"
#import "QualificationLevelMock.h"
#import "QualificationLevelEntity.h"
#import "ArticlesamplelistMock.h"
#import "ArticleSampleListEntity.h"
#import "ProductBargainListMock.h"
#import "BuyingListMock.h"
#import "TodoListMock.h"
#import "SettlementsMock.h"
#import "DoSettleMock.h"
#import "DetailMock.h"
#import "DealHistoryMock.h"
#import "ProfitMock.h"
#import "PolicyListMock.h"
#import "SchemeDetailMock.h"
#import "PreSimpleCheckMock.h"
#import "PrePolicyCheckMock.h"
#import "CreatePolicyMock.h"

@class ProductBargainDeclaredMock;
@class ProductBargainDeclaredParam;
@class CheckBuyQualificationParam;
@class CheckBuyQualificationMock;
@class ProductBargainFixMock;
@class ProductBargainFixParam;
@class ProductPanKouMock;
@class ProductPanKouParam;
@class SellingListMock;
@class SellingListParam;
@class SellOrderMock;
@class SellOrderParam;

@class ProfitParam;
@class ProfitMock;


@interface ProductsManager : BaseManager

@property (readonly)  ProductListRecordsEntity* selectedProduct;

@property (nonatomic,strong) HqMock *hqMock;
@property (nonatomic,strong) HqParam *hqParam;
@property (nonatomic,strong) ProductPanKouMock *shHqMock;
@property (nonatomic,strong) ProductPanKouParam *shHqParam;

@property (nonatomic,strong) GetTimeMock* timeMock;
@property (nonatomic,strong) GetTimeParam* timeParam;

@property (nonatomic,strong) QualificationLevelMock* qualificationLevelMock;
@property (nonatomic,strong) QualificationLevelParam* qualificationLevelParam;
@property (nonatomic,strong) QualificationLevelEntity* qualificationLevelEntity;

@property (nonatomic, strong) ArticlesamplelistMock *articleSampleListMock;
@property (nonatomic, strong) AtriclesamplelistParam *articleSampleListParam;

@property (nonatomic) NSInteger serverTime;
@property (nonatomic) NSInteger localTime;

@property (nonatomic,strong) ProfitParam* profitParam;
@property (nonatomic,strong) ProfitMock* profitMock;

@property (nonatomic,strong) CheckBuyQualificationMock *checkBuyQualificationMock;
@property (nonatomic,strong) CheckBuyQualificationParam *checkBuyQualificationParam;

@property (nonatomic,strong) ProductBargainListMock *productBargainListMock;
@property (nonatomic,strong) ProductBargainListParam *productBargainListParam;

@property (nonatomic,strong) ProductBargainFixMock* productBargainFixMock;
@property (nonatomic,strong) ProductBargainFixParam* productBargainFixParam;

@property (nonatomic, strong) BuyingListMock *buyingListMock;
@property (nonatomic, strong) BuyingListParam *buyingListParam;

@property (nonatomic, strong) TodoListMock *todoListMock;
@property (nonatomic, strong) TodoListParam *todoListParam;

@property (nonatomic, strong) SellingListMock *sellingListMock;
@property (nonatomic, strong) SellingListParam *sellingListParam;
@property (nonatomic, strong) SellOrderMock *sellOrderMock;
@property (nonatomic, strong) SellOrderParam *sellOrderParam;

@property (nonatomic, strong) SettlementsMock *settlementsMock;
@property (nonatomic, strong) SettlementsParam *settlementsParam;

@property (nonatomic, strong) DoSettleMock *doSettleMock;
@property (nonatomic, strong) DoSettleParam *doSettleParam;

@property (nonatomic,strong) ProductBargainDeclaredMock* declareMock;
@property (nonatomic,strong) ProductBargainDeclaredParam* declareParam;

@property (nonatomic,strong) DetailMock* detailMock;
@property (nonatomic,strong) DetailParam* detailParam;

@property (nonatomic,strong) DealHistoryMock* dealHistoryMock;
@property (nonatomic,strong) DealHistoryParam* dealHistoryParam;

@property (nonatomic,strong) ProfitParam* profitParam;
@property (nonatomic,strong) ProfitMock* profitMock;

@property (nonatomic,strong) PolicyListMock *policyListMock;
@property (nonatomic,strong) PolicyListParam *policyListParam;

@property (nonatomic,strong) SchemeDetailMock *schemeDetailMock;
@property (nonatomic,strong) SchemeDetailParam *schemeDetailParam;

@property (nonatomic,strong) PreSimpleCheckMock *preSimpleCheckMock;
@property (nonatomic,strong) PreSimpleCheckParam *preSimpleCheckParam;

@property (nonatomic,strong) PrePolicyCheckMock *prePolicyCheckMock;
@property (nonatomic,strong) PrePolicyCheckParam *prePolicyCheckParam;

@property (nonatomic,strong) CreatePolicyMock *createPolicyMock;
@property (nonatomic,strong) CreatePolicyParam *createPolicyParam;

+(instancetype)shareProductsManager;
/** 初始化mock 在对象创建时被调用，子类重载 **/
-(void)initMock;

-(void)refreshHQWithCode:(NSString*)code Block:(ManagerReturnBlock)returnBlock;
-(void)refreshSHHQWithBlock:(ManagerReturnBlock)returnBlock;
-(NSInteger)getServerTime;//获取时间
-(void)syncServerTime;//同步时间

/*检查认证等级*/
-(void)checkBuyQualify:(ManagerReturnBlock)returnBlock;

-(void)checkLevel:(ManagerReturnBlock)returnBlock;
//投资人合作协议列表
-(void)getArticleSamplelistInfo:(ManagerReturnBlock)returnBlock;

/*获取异议申报列表*/
-(void)getBargainListWithPage:(int)pageNo  block:(ManagerReturnBlock)returnBlock;

/*获取结算修正列表*/
-(void)getCheckOutFixListWithPage:(int)pageNo block:(ManagerReturnBlock)returnBlock;
/**
 *  获取待建仓列表
 *
 *  @param startId
 *  @param returnBlock
 */
-(void)getBuyingListInformationWithStartId:(NSString *)startId Block:(ManagerReturnBlock)returnBlock;

/**
 *  获取待通知列表
 *
 *  @param startId
 *  @param returnBlock
 */
-(void)getTodoListInformationWithStartId:(NSString *)startId Block:(ManagerReturnBlock)returnBlock;

/**
 *  获取待通知平仓
 *
 *  @param startId
 *  @param returnBlock
 */
-(void)getSellingListInformationWithStartId:(NSString *)startId Block:(ManagerReturnBlock)returnBlock;

/*账单列表数据*/
-(void)getCheckListWithStartId:(NSString *)startId Block:(ManagerReturnBlock)returnBlock;

/*账单列表支付*/
-(void)goPayWithp_id:(NSString *)p_id Block:(ManagerReturnBlock)returnBlock;

/*异议申请*/
-(void)declareBargainWithReason:(NSString*)reason
                          price:(NSString*)price
                          point:(NSString*)point
                            pid:(NSString*)pid
                           type:(NSString*)ptype
                          block:(ManagerReturnBlock)returnBlock;

/*账单详细*/
-(void)getCheckDetailWithP_id:(NSString *)p_id AndP_type:(NSString *)p_type Block:(ManagerReturnBlock)returnBlock;

/*流水账单*/
-(void)getDealHistoryWithP_id:(NSString *)p_id AndType:(NSString *)type Block:(ManagerReturnBlock)returnBlock;
<<<<<<< .mine

-(void)refreshProfitByIds:(NSArray*)id_arr andBlock:(ManagerReturnBlock)returnBlock;

/*订单详情*/
-(void)getDetailWithP_id:(NSString *)p_id WithP_type:(NSString *)p_type block:(ManagerReturnBlock)returnBlock;

/*平仓*/
-(void)sellOrderWithId:(NSString*)p_id andAmount:(NSString*)amount andPrice:(NSString*)price block:(ManagerReturnBlock)returnBlock;

=======
/* 刷浮盈 */
-(void)refreshProfitByIds:(NSArray*)id_arr andBlock:(ManagerReturnBlock)returnBlock;

/**查询可选策略列表**/
-(void)getPolicyListByCode:(NSString *)stock_code
                   startID:(NSString *)start_id
                     limit:(NSString *)limit
                     block:(ManagerReturnBlock)returnBlock;

/**方案查询**/
-(void)getSchemeDetailBySchemeID:(NSString *)scheme_id Block:(ManagerReturnBlock)returnBlock;


/**提前校验接口**/
-(void)preSimpleCheckByStockCode:(NSString *)stock_code Block:(ManagerReturnBlock)returnBlock;

/**确认买前统一校验**/
-(void)prePolicyCheckBySchemeID:(NSString *)scheme_id
                    investor_id:(NSString *)investor_id
                     stock_Code:(NSString *)stock_code
                           fund:(NSString *)fund
                        cell_id:(NSString *)cell_id
                          Block:(ManagerReturnBlock)returnBlock;

/**确认发布策略**/
-(void)createPolicyBySchemeID:(NSString *)scheme_id
                    investor_id:(NSString *)investor_id
                     stock_Code:(NSString *)stock_code
                           fund:(NSString *)fund
                        cell_id:(NSString *)cell_id
                          Block:(ManagerReturnBlock)returnBlock;

>>>>>>> .r3165
@end








