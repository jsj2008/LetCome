//
//  ProductCheckOutFixDetailsViewController.m
//  A50
//
//  Created by chenyi on 15/11/9.
//  Copyright © 2015年 JYZD. All rights reserved.
//

#import "ProductCheckOutFixDetailsViewController.h"
#import "UIBarButtonItem+YL.h"
#import "MyWebViewController.h"
#import "ProductBargainPayMock.h"
#import "CheckOutFixListViewController.h"
#import "ProductCheckOutFixDetailsSection.h"

@interface ProductCheckOutFixDetailsViewController ()
{

    UILabel *_failLabel;
}
@end

@implementation ProductCheckOutFixDetailsViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    
    self.title=@"补偿明细";
    
//    self.navigationItem.leftBarButtonItem = [UIBarButtonItem buttonItemWithIcon:@"back_white" highlightedIcon:@"back_white" target:self action:@selector(back)];

    _failLabel = [[UILabel alloc]initWithFrame:CGRectMake(15, 275, [UIScreen mainScreen].bounds.size.width-30, 40)];
    _failLabel.textColor = Color_Bg_757575;
    _failLabel.font = [UIFont systemFontOfSize:12];
    _failLabel.text = self.entity.fix_fail_time_str;
    _failLabel.textAlignment = NSTextAlignmentLeft;
    _failLabel.numberOfLines = 0;
    [self.view addSubview:_failLabel];
    _failLabel.hidden = YES;
    // Do any additional setup after loading the view from its nib.
}


- (void)back {
    [self.navigationController popViewControllerAnimated:YES];
}



-(void)initQuickUI{

    self.pAdaptor = [QUFlatAdaptor adaptorWithTableView:self.myTableView nibArray:@[@"ProductCheckOutFixDetailsSection"] delegate:self];
    
    ProductBargainFixRecordsEntity *entity1 = [ProductBargainFixRecordsEntity entity];
    entity1.sectionList = @"协议编号";
    entity1.tag = 1;
    entity1.selectionStyle = UITableViewCellSelectionStyleGray;
    entity1.lineBottomColor = QU_FLAT_COLOR_LINE;
    entity1.pIndentBottomLevel = 1;
    entity1.selectedBgColor = QU_FLAT_COLOR_CELL_BG_SELECTED;
    [self.pAdaptor.pSources addEntity:entity1 withSection:[ProductCheckOutFixDetailsSection class]];
    
    ProductBargainFixRecordsEntity *entity2 = [ProductBargainFixRecordsEntity entity];
    entity2.sectionList = @"发布时间";
    entity2.tag = 2;
    entity2.selectionStyle = UITableViewCellSelectionStyleGray;
    entity2.lineBottomColor = QU_FLAT_COLOR_LINE;
    entity2.pIndentBottomLevel = 1;
    entity2.selectedBgColor = QU_FLAT_COLOR_CELL_BG_SELECTED;
    [self.pAdaptor.pSources addEntity:entity2 withSection:[ProductCheckOutFixDetailsSection class]];

    ProductBargainFixRecordsEntity *entity3 = [ProductBargainFixRecordsEntity entity];
    entity3.sectionList = @"补偿时间";
    entity3.tag = 3;
    entity3.selectionStyle = UITableViewCellSelectionStyleGray;
    entity3.lineBottomColor = QU_FLAT_COLOR_LINE;
    entity3.pIndentBottomLevel = 1;
    entity3.selectedBgColor = QU_FLAT_COLOR_CELL_BG_SELECTED;
    [self.pAdaptor.pSources addEntity:entity3 withSection:[ProductCheckOutFixDetailsSection class]];
    
    ProductBargainFixRecordsEntity *entity4 = [ProductBargainFixRecordsEntity entity];
    entity4.sectionList = @"补偿类别";
    entity4.tag = 4;
    entity4.selectionStyle = UITableViewCellSelectionStyleGray;
    entity4.lineBottomColor = QU_FLAT_COLOR_LINE;
    entity4.pIndentBottomLevel = 1;
    entity4.selectedBgColor = QU_FLAT_COLOR_CELL_BG_SELECTED;
    [self.pAdaptor.pSources addEntity:entity4 withSection:[ProductCheckOutFixDetailsSection class]];
    
    ProductBargainFixRecordsEntity *entity5 = [ProductBargainFixRecordsEntity entity];
    entity5.sectionList = @"应付金额";
    entity5.tag = 5;
    entity5.selectionStyle = UITableViewCellSelectionStyleGray;
    entity5.lineBottomColor = QU_FLAT_COLOR_LINE;
    entity5.pIndentBottomLevel = 1;
    entity5.selectedBgColor = QU_FLAT_COLOR_CELL_BG_SELECTED;
    [self.pAdaptor.pSources addEntity:entity5 withSection:[ProductCheckOutFixDetailsSection class]];
    
    ProductBargainFixRecordsEntity *entity6 = [ProductBargainFixRecordsEntity entity];
    entity6.sectionList = @"状态";
    entity6.tag = 6;
    entity6.selectionStyle = UITableViewCellSelectionStyleGray;
    entity6.lineBottomColor = QU_FLAT_COLOR_LINE;
    entity6.selectedBgColor = QU_FLAT_COLOR_CELL_BG_SELECTED;
    [self.pAdaptor.pSources addEntity:entity6 withSection:[ProductCheckOutFixDetailsSection class]];
    
    
    if ([self.entity.state isEqualToString:@"0"]) {
        self.btnPayView.hidden=NO;
        self.myTableView.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height-63);

    }
    else{
        self.btnPayView.hidden=YES;
        self.myTableView.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height);

    }

    self.btnPay.layer.cornerRadius = 5;
    [self.btnPay addTarget:self action:@selector(payFunc) forControlEvents:UIControlEventTouchUpInside];
    
    [self.pAdaptor notifyChanged];
    
    
}

-(void)QUAdaptor:(QUAdaptor *)adaptor forSection:(QUSection *)section forEntity:(QUEntity *)entity{
    
    if ([section isKindOfClass:[ProductCheckOutFixDetailsSection class]]) {
        ProductBargainFixRecordsEntity* e = (ProductBargainFixRecordsEntity*)entity;
        ProductCheckOutFixDetailsSection* s = (ProductCheckOutFixDetailsSection*)section;
        CGRect tempFrame = s.lblKind.frame;
        s.lblKind.frame = tempFrame;
        s.lblKind.text = e.sectionList;
        
        if (self.entity.fix_fail_time_str) {
            _failLabel.hidden = NO;
        }else{
        
            _failLabel.hidden = YES;
        }
        if (e.tag == 1) {
            
            s.lblContent.text = self.entity.pno;
        }
        if (e.tag == 5) {
            
           s.lblContent.text = [NSString stringWithFormat:@"¥%.2f",self.entity.delta_profit.floatValue];
            if ([self.entity.state isEqualToString:@"0"]||[self.entity.state isEqualToString:@"1"]||[self.entity.state isEqualToString:@"4"]) {
               
                s.lblContent.textColor=Color_Down_Green;
            }else{
                
                s.lblContent.textColor=Color_Up_Red;
            }

        }
        if (e.tag == 6) {
            s.lblContent.text = self.entity.state_name;
        
        }
       
        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
        [formatter setDateStyle:NSDateFormatterMediumStyle];
        [formatter setTimeStyle:NSDateFormatterShortStyle];
        [formatter setDateFormat:@"YYYY-MM-dd HH:mm"]; // ----------设置你想要的格式,hh与HH的区别:分别表示12小时制,24小时

        if (e.tag == 2) {
            NSDate *temp = [NSDate dateWithTimeIntervalSince1970:[self.entity.order_create_time integerValue]];
            
             s.lblContent.text = [formatter stringFromDate:temp];
        }
        
        if (e.tag == 3) {
            
            NSDate *temp = [NSDate dateWithTimeIntervalSince1970:[self.entity.create_time integerValue]];
            
            s.lblContent.text = [formatter stringFromDate:temp];
           
        }
        
        if (e.tag == 4) {
            
            s.lblContent.text = self.entity.type_name;
        }
    }
}


-(void)payFunc{
    
    
    self.payMock = [ProductBargainPayMock mock];
    self.payMock.delegate = self;
    self.payParam = [ProductBargainPayParam param];
    self.payParam.p_id = self.entity.p_id;
    self.payParam.p_type = self.entity.p_type;
    self.payParam.fix_id = self.entity.fix_id;
    
    [[ViewControllerManager sharedManager] showWaitView:self.navigationController.view];
    [self.payMock run:self.payParam];

}


- (void)QUMock:(QUMock *)mock entity:(QUEntity *)entity {
    [[ViewControllerManager sharedManager] hideWaitView];
    if ([mock isMemberOfClass:[ProductBargainPayMock class]]) {
        ProductBargainPayEntity *e = (ProductBargainPayEntity *)entity;
        
        if ([e.result isEqualToString:@"Y"]) {  //成功
            _failLabel.hidden = YES;
            [WpCommonFunction messageBoxOneButtonWithMessage:@"支付成功" andTag:0 andDelegate:self];

            [self.navigationController popViewControllerAnimated:YES];
            
        } else {  //失败
            
            _failLabel.hidden = NO;

        }
    }
}



- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
