//
//  SetPasswordViewController.m
//  QianFangGuJie
//
//  Created by 财道 on 15/1/4.
//  Copyright (c) 2015年 余龙. All rights reserved.
//

#import "SetPasswordViewController.h"
#import "SetPasswordEntity.h"
#import "SetPasswordMock.h"
#import "ForgetViewController.h"
#import "CustomIOSAlertView.h"

#define Color_Bg_blue Color_Bg_RGB(80.0f, 140.0f, 240.0f)
#define Color_Bg_White Color_Bg_RGB(255.0f, 255.0f, 255.0f)

@interface SetPasswordViewController ()<UITextFieldDelegate,UIAlertViewDelegate>
@property (strong, nonatomic) IBOutlet UITextField *oldPassword;
@property (strong, nonatomic) IBOutlet UITextField *Password;    //新密码
@property (strong, nonatomic) IBOutlet UITextField *Password2;   //确定新密码
@property (strong, nonatomic) IBOutlet UIButton *btnConfirm;
//忘记密码
@property (strong, nonatomic) IBOutlet UIButton *forgetBtn;
@property(strong,nonatomic)SetPasswordParam* param;

@end
#define kAlphaNum @"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
@implementation SetPasswordViewController

- (void)viewDidLoad {
    self.title = @"修改密码";
    
    self.oldPassword.delegate = self;
    self.oldPassword.tag = 0;
    self.Password.delegate = self;
    self.Password.tag = 1;
    self.Password2.delegate = self;
    self.Password2.tag = 2;
    self.btnConfirm.enabled = NO;
    self.btnConfirm.layer.cornerRadius = 3;
    self.oldPassword.secureTextEntry = YES;
    self.Password.secureTextEntry = YES;
    self.Password2.secureTextEntry = YES;
    [self.btnConfirm addTarget:self action:@selector(confirm) forControlEvents:UIControlEventTouchUpInside];
    [self.forgetBtn addTarget:self action:@selector(forgetClick) forControlEvents:UIControlEventTouchUpInside];
    [self.oldPassword addTarget:self action:@selector(textFieldChanged:) forControlEvents:UIControlEventEditingChanged];
    [self.Password addTarget:self action:@selector(textFieldChanged:) forControlEvents:UIControlEventEditingChanged];
    [self.Password2 addTarget:self action:@selector(textFieldChanged:) forControlEvents:UIControlEventEditingChanged];
    [super viewDidLoad];

}

-(void)resetStatus{

    self.oldPassword.placeholder = @"请输入密码";
    self.oldPassword.text = @"";
    self.Password.placeholder = @"6-18位数字、英文、字母";
    self.Password.text = @"";
    self.Password2.placeholder = @"再次输入新密码";
    self.Password2.text = @"";
    [self.btnConfirm setTitleColor:kColorTextBtnDisabled forState:UIControlStateNormal];
    [self.btnConfirm setBackgroundColor:kColorBgBtnDisabled];
    
    
}
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
    [MobClick beginLogPageView:@"修改密码"];
    [self resetStatus];
    
}

-(void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [MobClick endLogPageView:@"修改密码"];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


-(BOOL)checkTextField:(NSString*)string{
    NSCharacterSet *cs;
    cs = [[NSCharacterSet characterSetWithCharactersInString:kAlphaNum] invertedSet];
    NSString *filtered = [[string componentsSeparatedByCharactersInSet:cs] componentsJoinedByString:@""]; //按cs分离出数组,数组按@""分离出字符串
    
    BOOL canChange = [string isEqualToString:filtered];
    return canChange;
}

-(void)initQuickMock{
    self.mock = [SetPasswordMock mock];
    self.mock.delegate = self;
    self.param = [SetPasswordParam param];
  //  self.param.uid =             //预留
}


-(void)textFieldChanged:(UITextField *)textField{

    if (self.Password.text.length>=6 && self.Password2.text.length>=6) {
        self.btnConfirm.enabled = YES;
        [self.btnConfirm setTitleColor:Color_Bg_White forState:UIControlStateNormal];
        [self.btnConfirm setBackgroundColor:Color_Bg_blue];
    }
    else{
        self.btnConfirm.enabled = NO;
        [self.btnConfirm setTitleColor:kColorTextBtnDisabled forState:UIControlStateNormal];
        [self.btnConfirm setBackgroundColor:kColorBgBtnDisabled];
    }
    if (textField == self.oldPassword) {
        if (textField.text.length > 18) {
            textField.text = [textField.text substringToIndex:18];
        }
    }
    if (textField == self.Password) {
        if (textField.text.length > 18) {
            textField.text = [textField.text substringToIndex:18];
        }
    }
    if (textField == self.Password2) {
        if (textField.text.length > 18) {
            textField.text = [textField.text substringToIndex:18];
        }
    }
    
}

#pragma mark  UITextFieldDelegate

-(BOOL)textFieldShouldReturn:(UITextField *)textField{
    [textField endEditing:YES];
    if (self.btnConfirm.isEnabled) {
        [self confirm];
    }
    return YES;
}


-(void)confirm{
    [self.oldPassword resignFirstResponder];
    [self.Password resignFirstResponder];
    [self.Password2 resignFirstResponder];
    
    NSString* oldPassword = self.oldPassword.text;
    NSString* password1 = self.Password.text;
    NSString* password2 = self.Password2.text;
    BOOL result =[WpCommonFunction verifyNewPaymentPassword:oldPassword];
    BOOL result2 = [WpCommonFunction verifyNewPaymentPassword:password1];
    BOOL result3 =[WpCommonFunction verifyNewPaymentPassword:password2];
    if (!result || !result2 || !result3 ) {
        
        [WpCommonFunction showNotifyHUDAtViewCenter:self.view withErrorMessage:@"请输入6-18位数字、字母，字母区分大小写"];
        return;
    }

    if([password1 isEqualToString:password2] && oldPassword)
    {
        [[ViewControllerManager sharedManager]showWaitView:self.view];
        self.param.uid = [[UserInfoManager shareUserInfoManager] getUserID];
        self.param.passwordNew = password1;
        self.param.passwordOld = oldPassword;
        self.param.type = @"1";
        [self.mock run:self.param];
        //请求网络
    }else{
        [WpCommonFunction showNotifyHUDAtViewCenter:self.view withErrorMessage:@"两次密码输入不一致"];
    }
}

-(void)QUMock:(QUMock *)mock entity:(QUEntity *)entity{
    if ([mock isKindOfClass:[SetPasswordMock class]]) {
        SetPasswordEntity* e = (SetPasswordEntity*)entity;
        if ([e.result isEqualToString:@"Y"]) {
            [WpCommonFunction showNotifyHUDAtViewCenter:self.view withErrorMessage:@"密码修改成功"];
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(.5f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                [self.navigationController popViewControllerAnimated:YES];
            });
            
        }else{
            
            [WpCommonFunction showNotifyHUDAtViewCenter:self.view withErrorMessage:@"您的密码输入错误"];
        }
    }
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(.5f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.navigationController popViewControllerAnimated:YES];
    });
    
}

-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
   
    [self.oldPassword resignFirstResponder];
    [self.Password resignFirstResponder];
    [self.Password2 resignFirstResponder];
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

- (void)forgetClick{
    [self.navigationController pushViewController:[ForgetViewController controller] animated:YES];
}

@end
