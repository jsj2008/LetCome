//
//  LoginBaseController.m
//  QianFangGuJie
//
//  Created by kinghy on 15/4/4.
//  Copyright (c) 2015年 余龙. All rights reserved.
//

#import "LoginBaseController.h"
#import "Constant.h"
#import "NetResultCode.h"
#import "ForgetViewController.h"
#import "UserInfoManager.h"
#import "MyWebViewController.h"
#import "BindInfoViewController.h"
#import "ResetNameViewController.h"
#import "PasswordWindow.h"
#import "BindAllViewController.h"


@interface LoginBaseController ()<MyViewControllerDelegate>{
    UIView * currentView;
    CAShapeLayer *codeBorderlayer;
}
@property (strong, nonatomic) CALayer *transLayer ;
@property (strong, nonatomic) CALayer *waitLayer ;

@end

@implementation LoginBaseController

- (void)viewDidLoad {
    [super viewDidLoad];
    [self initTextField];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(ssoLogin:) name:kSSOLoginNotification object:nil];
    if (self.navigationController.view) {
        currentView = self.navigationController.view;
    }else{
        currentView = self.view;
    }
    self.userinfomanager = [UserInfoManager shareUserInfoManager];
    
    UITapGestureRecognizer *gest = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(getNewPic)];
    self.identifyImage.userInteractionEnabled = YES;

    [self.identifyImage addGestureRecognizer:gest];
    
    self.middleView.hidden = YES;
    self.bottomView.hidden = YES;
    self.cpbView.hidden = NO;

}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)viewWillAppear:(BOOL)animated{
    self.statusBarStyle = UIStatusBarStyleLightContent;
    [super viewWillAppear:animated];
    
    [self.transLayer removeFromSuperlayer];
    self.transLayer = [CALayer layer];
        //add it to our view
    [self.loginButton.superview.layer addSublayer:self.transLayer];
    self.transLayer.hidden = YES;
    
    if (self.waitLayer == nil) {
        self.waitLayer = [CALayer layer];
        self.waitLayer.contents = (__bridge id)([UIImage imageNamed:@"loading_login"].CGImage);
        //add it to our view
        [self.loginButton.superview.layer addSublayer:self.waitLayer];
    }
    self.waitLayer.hidden = YES;
    self.loginButton.enabled = YES;
    self.loginButton.hidden = NO;
}


-(void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    //初始化动画元素
    // Do any additional setup after loading the view, typically from a nib.
    self.transLayer.frame = self.loginButton.frame ;
    self.transLayer.backgroundColor = Color_Bg_007aff.CGColor;
    self.transLayer.cornerRadius = self.transLayer.frame.size.height/2;

    self.waitLayer.frame = CGRectMake(self.loginButton.center.x-self.loginButton.frame.size.height/2,self.loginButton.frame.origin.y , self.loginButton.frame.size.height, self.loginButton.frame.size.height);
    self.loginButton.layer.cornerRadius = 3.f;
}

- (void)refreshImage:(id)sender {
    [self getNewPic];
}

#pragma mark - 获取验证码图片
-(void)getNewPic{
    
    NSString *url = [ConfigManager shareConfigManager].serverUrlUser;
    
    //暂时隐藏图片
    self.identifyImage.hidden = YES;
    //  dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
    _img = [[UIImage alloc]init];
    NSInteger width = 101;
    NSInteger length = 50;
    NSInteger font = 16;
    NSString* UUID = [WpCommonFunction getUniqueDeviceIdentifier];
    self.uid = UUID;
    NSString* imgUrl = [NSString stringWithFormat:@"%@/user/getsecuritycodePic?width=%ld&height=%ld&fontSize=%ld&UUID=%@",url,(long)width,(long)length,(long)font,UUID];
    
    NSData* data = [NSData dataWithContentsOfURL:[NSURL URLWithString:imgUrl]];
    _img = [UIImage imageWithData:data];

    if (_img) {
        //      dispatch_async(dispatch_get_main_queue(), ^{
        
        self.identifyImage.image = _img;
        self.identifyImage.hidden = NO;
        self.identifyCode.hidden = NO;
        //     });
    }
    
    //    });
    
}

-(NSString *)checkLoginValidate{
    BOOL validflg = YES;
    
    NSString *errorstr = nil;
    
    
    //检查手机长度和密码长度
    if (self.phoneNum) {
        NSString *mobileNoStr = [WpCommonFunction stringRemoveAllWhiteSpace:self.phoneNum.text];
        //检查手机号
        if (mobileNoStr == nil || mobileNoStr.length==0) {
            validflg = NO;
            errorstr = @"请输入绑定的手机号";
        }else if(mobileNoStr.length != 11  ||  ![[mobileNoStr substringToIndex:1] isEqualToString:@"1"]){
            validflg = NO;
            errorstr = @"请输入有效的11位手机号码";
        }
        //检查密码
    }else{
        NSString *userid = [UserInfoManager shareUserInfoManager].getUserID;
        if (userid==nil) {
            validflg = NO;
            errorstr = @"用户信息失效，请点击切换账号";
        }

    }
    
    NSString *payPswordStr = self.password.text;
    NSString *identifyCodeStr = self.identifyCode.text;
    
    if (validflg){
        if(payPswordStr == nil || payPswordStr.length == 0)
        {
            validflg = NO;
            errorstr = @"请输入设置的密码";
        }else if( payPswordStr.length < 6 || payPswordStr.length >18 ){
            validflg = NO;
            errorstr = @"请输入6-18位数字、字母，字母区分大小写";
        }
    }
    
    //检查验证码
    if ( validflg && !self.viewIdentify.isHidden && ( identifyCodeStr == nil || identifyCodeStr.length != 4)){
        validflg = NO;
        errorstr = @"请输入4位验证码";
    }
    
    return errorstr;
}

#pragma mark UITextFieldDelegate Method
- (void)textFieldDidEndEditing:(UITextField *)textField;
{
    if (textField.tag == kMobileTextFieldTag)
    {
        self.mobileNumberString = [WpCommonFunction stringRemoveAllWhiteSpace:textField.text];
    }
    
}


- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self.view endEditing:YES];
    
    //    if (ISDEBUG)  self.loginButton.enabled = YES;
    
    if (self.loginButton.enabled)
    {
        [self clickLoginButton:self.loginButton];
    }
    
    return YES;
}

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    
    if (textField.tag == kPayPswTextFieldTag) {
        self.mobileNumberString = [WpCommonFunction stringRemoveAllWhiteSpace:self.phoneNum.text];
        //[self verifyMobileNumberFormat];
    }
    
    return YES;
}


-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    NSString *mobileNoStr = [WpCommonFunction stringRemoveAllWhiteSpace:self.phoneNum.text];
    
    NSString *payPswordStr = self.password.text;
    
    NSString *idCodeStr = self.identifyCode.text;
    
    if (textField.tag == kMobileTextFieldTag && mobileNoStr.length > 10 && string.length > 0) return NO;
    
    if (textField.tag == kPayPswTextFieldTag && payPswordStr.length > 17 && string.length > 0) return NO;
    
    if (textField.tag == kIdentifyTextFieldTag && idCodeStr.length > 3 && string.length > 0) return NO;
    //验证码和密码只允许数字和字母
    if ((textField.tag == kIdentifyTextFieldTag||textField.tag == kPayPswTextFieldTag) && ![self verifyPwdIDCodeFormat:string]) return NO;
    
    // 登录按钮可用1、手机号=11位；2、支付密码为6-18位。
    if ([self.phoneNum isFirstResponder]) {
         NSString* changedString=[textField.text substringWithRange:range];
        
        if([changedString isEqualToString:@" "]) // 如果删除为空格字符
        {
            self.phoneNum.bCurrentDelededBlank=YES;
        }
        else
            self.phoneNum.bCurrentDelededBlank=NO;
        
        //if (ISDEBUG)  self.loginButton.enabled = YES;
    }
    else if ([self.password isFirstResponder])
    {
        /**
         *
         * 手机号的第1位必须为1
         * 长度必须为11
         * 密码长度必须大于5
         *
         */
        
        if (ISDEBUG)  self.loginButton.enabled = YES;
    }
    
    return YES;
}

- (BOOL)textFieldShouldClear:(UITextField *)textField
{
       return YES;
}


-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
    [self resignAllTextFieldFirstResponder];
}

-(void)resignAllTextFieldFirstResponder{
    [self.phoneNum resignFirstResponder];
    [self.password resignFirstResponder];
    [self.identifyCode resignFirstResponder];
}

//检查输入密码和验证码，只能数字和密码，区分大小写
-(BOOL)verifyPwdIDCodeFormat:(NSString*)str{
    BOOL flg = YES;
    for(int i=0;str!=nil && i<str.length;++i){
        int asciiCode = [str characterAtIndex:0]; // 65
        if (!((asciiCode>=48 && asciiCode <= 57)||(asciiCode>=65 && asciiCode <= 90) || (asciiCode>=97 && asciiCode <= 122))) {
            flg = NO;
            break;
        }
    }
    return flg;
}

-(void)didChangedPassword:(UITextField*)textField{

}

-(void)initTextField{
    //初始化手机输入框
    self.phoneNum.tag = kMobileTextFieldTag;
    self.phoneNum.keyboardType = UIKeyboardTypeNumberPad;
    self.phoneNum.delegate = self;
    self.phoneNum.placeholder = @"手机号";
    self.phoneNum.text = @"";
    self.phoneNum.clearButtonMode = UITextFieldViewModeWhileEditing;
    //初始化密码输入框
    self.password.tag = kPayPswTextFieldTag;
    self.password.keyboardType = UIKeyboardTypeASCIICapable;
    self.password.delegate = self;
    self.password.placeholder = @"密码";
    self.password.secureTextEntry = YES;
    [self.password addTarget:self action:@selector(didChangedPassword:) forControlEvents:UIControlEventEditingChanged];
    self.password.text = @"";
    self.password.clearButtonMode = UITextFieldViewModeWhileEditing;
    //验证码
    self.identifyCode.tag = kIdentifyTextFieldTag;
    self.identifyCode.delegate = self;
    self.identifyCode.clearButtonMode = UITextFieldViewModeWhileEditing;
    self.password.keyboardType = UIKeyboardTypeASCIICapable;
    self.viewIdentify.hidden = YES;
    self.identifyImage.hidden = YES;
    self.verifyView.hidden = YES;
    self.identifyCode.text = @"";
    
    //登陆框
    self.loginButton.enabled = YES;
}






- (IBAction)clickLoginButton:(id)sender {
    [self resignAllTextFieldFirstResponder];
    NSString * errorstr = [self checkLoginValidate];
    if(errorstr==nil|| ISDEBUG){
        [[ViewControllerManager sharedManager] showWaitView:self.view];
        if (!self.identifyImage.isHidden) {
            [self loginWithPic ];
        }else{
            [self login ];
        }
    }else{
        [WpCommonFunction showNotifyHUDAtViewBottom:self.view withErrorMessage:errorstr];
    }
    
}

-(void)ssoLogin:(NSNotification*)notify{
    if (![UserInfoManager hasLogin]) {
        [[ViewControllerManager sharedManager] showWaitView:self.view];
        DEFINED_WEAK_SELF
        [self.userinfomanager loginWithToken:notify.object ReturnBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
            LoginEntity* e = (LoginEntity*)entity;
            if([e.error_code isEqualToString:code2str(NET_SUCCESS_CODE)]){
                //初始化输入框
                [_self LoginSuccess:e];
            }
            [[ViewControllerManager sharedManager] hideWaitView];
        }];
    }
}

-(void) login{
    DEFINED_WEAK_SELF
    NSString *loginId = self.phoneNum?[WpCommonFunction stringRemoveAllWhiteSpace:self.phoneNum.text]:[UserInfoManager shareUserInfoManager].getUserID;
    NSString *type = self.phoneNum?@"2":@"6";

    [self.userinfomanager loginWithLoginID:loginId Password:self.password.text LogInType:type ReturnBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        _self.loginButton.enabled=YES;
        LoginEntity* e = (LoginEntity*)entity;
        if([e.error_code isEqualToString:code2str(NET_SUCCESS_CODE)])
        {
            //初始化输入框
            [_self initTextField];
            [_self LoginSuccess:e];
            
        }
        else if ([e.error_code isEqualToString:code2str(NET_ERROR_CODE_VARIFYPIC_NEEDED) ])
        {
            [[ViewControllerManager sharedManager] hideWaitView];
            [WpCommonFunction showNotifyHUDAtViewBottom:_self.view withErrorMessage:@"密码错误"];
            _self.identifyImage.hidden = NO;                 //需要验证码
            _self.viewIdentify.hidden = NO;
            _self.verifyView.hidden = NO;
            //  __block UIImage* img = nil;
            /************************************走验证码图片请求   *********************************/
            [_self getNewPic];
        }else{
            [[ViewControllerManager sharedManager] hideWaitView];
            //当验证码激活时，任何的网络请求都会刷新验证码
            if(!_self.identifyImage.isHidden){
                [_self getNewPic];
            }
        }
    }];
}

-(void) loginWithPic{
    NSString *loginId = self.phoneNum?[WpCommonFunction stringRemoveAllWhiteSpace:self.phoneNum.text]:[UserInfoManager shareUserInfoManager].getUserID;
    NSString *type = self.phoneNum?@"2":@"6";
    DEFINED_WEAK_SELF
    [self.userinfomanager getCheckPicWithUUID:self.uid IdentifyCode:self.identifyCode.text
                                  ReturnBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
                                      _self.loginButton.enabled=YES;
                                      _self.myCheckPicEntity = (checkPicEntity*)entity;
                                      if ([_self.myCheckPicEntity.error_code isEqualToString:code2str(NET_SUCCESS_CODE)]) {
                                          [_self.userinfomanager loginWithLoginID:loginId Password:_self.password.text LogInType:type ReturnBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
                                              _self.loginButton.enabled=YES;
                                              LoginEntity* e = (LoginEntity*)entity;
                                              if([e.error_code isEqualToString:code2str(NET_SUCCESS_CODE)])
                                              {
                                                  //初始化输入框
                                                  [_self initTextField];
                                                  [_self LoginSuccess:e];
                                                  
                                              }
                                              else if ([e.error_code isEqualToString:code2str(NET_ERROR_CODE_VARIFYPIC_NEEDED) ])
                                              {
                                                  [[ViewControllerManager sharedManager] hideWaitView];
                                                  [WpCommonFunction showNotifyHUDAtViewBottom:_self.view withErrorMessage:@"密码错误"];
                                                  _self.identifyImage.hidden = NO;                 //需要验证码
                                                  _self.viewIdentify.hidden = NO;
                                                  _self.verifyView.hidden = NO;
                                                  //  __block UIImage* img = nil;
                                                  /************************************走验证码图片请求   *********************************/
                                                  [_self getNewPic];
                                              }else{
                                                  [[ViewControllerManager sharedManager] hideWaitView];
                                                  //当验证码激活时，任何的网络请求都会刷新验证码
                                                  if(!_self.identifyImage.isHidden){
                                                      [_self getNewPic];
                                                  }
                                              }
                                          }];
                                      }else{
                                          [[ViewControllerManager sharedManager] hideWaitView];
                                          //当验证码激活时，任何的网络请求都会刷新验证码
                                          if(!_self.identifyImage.isHidden){
                                              [_self getNewPic];
                                          }
                                      }
                                      
                                  }];
}


-(void)LoginSuccess:(LoginEntity*)e{
    [[NSNotificationCenter defaultCenter]postNotificationName:kRefreshMyStockListForMyStockBll object:nil];
    [[NSNotificationCenter defaultCenter]postNotificationName:kRefreshHotStockListForMyStockBll object:nil];
    [[NSNotificationCenter defaultCenter]postNotificationName:kRefreshFindList object:nil];
}


- (IBAction)forgetClicked:(id)sender {
    [self.navigationController popToRootViewControllerAnimated:NO];
    [[PasswordWindow shareWindow] showWithForget];
}


#pragma mark 登录后显示主页
-(void)LoginSuccessShowWithIndexController{
    
    DEFINED_WEAK_SELF
    [self.userinfomanager LoginSuccessShowWithReturnBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
        [[ViewControllerManager sharedManager] hideWaitView];
        NSString *phoneNum = [UserInfoManager shareUserInfoManager].getUserPhonenumber;
        NSString *nick = [UserInfoManager shareUserInfoManager].getUserNickName;
        if (phoneNum == nil || [phoneNum isEqualToString:@""]) {
        
            
            //TPZ版本绑定手机号
            BindInfoViewController *bind = [BindInfoViewController controller];
            bind.pwdDelegate = _self.pwdDelegate;
            [_self.navigationController pushViewController:bind animated:YES];
        
         
        }else if(nick == nil || [nick isEqualToString:@""]){
            
            ResetNameViewController *resetNameViewController = [ResetNameViewController controller];
            resetNameViewController.view.backgroundColor = [UIColor colorWithRed:0 green:0 blue:0 alpha:.4];
            resetNameViewController.modalPresentationStyle = UIModalPresentationOverCurrentContext;
            [_self presentViewController:resetNameViewController animated:YES completion:nil];
            resetNameViewController.delegate = _self;
            
        }else{
            [_self MyViewControllerOnBack];
        }
        
        
        
    }];
}

-(void)MyViewControllerOnBack{
    kShareAppDelegate.isFirst = NO;
    [self performSelector:@selector(goBack) withObject:nil afterDelay:.5f];
}

- (IBAction)phoneLoginClicked:(id)sender {
    self.middleView.hidden = NO;
    self.bottomView.hidden = NO;
    self.cpbView.hidden = YES;
}

- (IBAction)cpbLoginClicked:(id)sender{
    self.middleView.hidden = YES;
    self.bottomView.hidden = YES;
    self.cpbView.hidden = NO;
}

- (IBAction)gotoCpbLogin:(id)sender {
    MyWebViewController* web = [MyWebViewController controllerWithUrl:[ConfigManager shareConfigManager].cpbLoginUrl];
    [web clearCache];
    web.title = @"拉钩宝授权登录";
    [self.navigationController pushViewController:web animated:YES];
}

- (IBAction)gotoCpbRegister:(id)sender {
    MyWebViewController* web = [MyWebViewController controllerWithUrl:[ConfigManager shareConfigManager].cpbRegUrl];
    [web clearCache];
    web.title = @"拉钩宝注册";
    [self.navigationController pushViewController:web animated:YES];
}

-(void) goBack{
    if (self.pwdDelegate && [self.pwdDelegate respondsToSelector:@selector(pwdViewControllerUnlocked:)]) {
        [self.pwdDelegate pwdViewControllerUnlocked:self];
    }
}

- (IBAction)doBack:(id)sender{
    if (self.pwdDelegate && [self.pwdDelegate respondsToSelector:@selector(pwdViewControllerDidClose:)]) {
        [self.pwdDelegate pwdViewControllerDidClose:self];
    }
    [self.navigationController popViewControllerAnimated:YES];
    
}

- (void)dealloc{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}



@end
