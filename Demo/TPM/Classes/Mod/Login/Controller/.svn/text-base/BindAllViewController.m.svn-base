//
//  BindAllViewController.m
//  TPZ
//
//  Created by  rjt on 16/4/13.
//  Copyright © 2016年 JYZD. All rights reserved.
//

#import "BindAllViewController.h"
#import "EFTextField.h"
#import "GestureUtil.h"
#import "SetMoblieAndPasswordEntity.h"
#import "GestureVC.h"
#import "SetNickNameEntity.h"

@interface BindAllViewController ()<PasswordViewControllerDelegate,UIAlertViewDelegate>
@property (weak, nonatomic) IBOutlet UIButton *confirmBtn;
@property (weak, nonatomic) IBOutlet EFTextField *nickTextField;
- (IBAction)cofirmClicked:(id)sender;
@end

@implementation BindAllViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.title = @"完善个人信息";
    self.confirmBtn.layer.cornerRadius = 5;
    
    self.navigationItem.leftBarButtonItem = nil;
    self.navigationItem.hidesBackButton = YES;
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

- (IBAction)cofirmClicked:(id)sender {
    [self.nickTextField resignFirstResponder];
    NSString* nickname = self.nickTextField.text;
    validateObject* nick = [validateObject object];
    nick.value = nickname;
    ValidateCPBNickName* validNickname = [ValidateCPBNickName  validateWithObject:nick];
    if (![validNickname validate]) {
        [WpCommonFunction showNotifyHUDAtViewBottom:self.view withErrorMessage:@"昵称为2-6个汉字"];
        return;
    };
//    [[UserInfoManager shareUserInfoManager] bindUserWithPhonenum:_phone pwd:_payPswordStr nickName:nickname withVerifyCode:_verifyCode andBlock:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
//        if (val.result && [entity isKindOfClass:[SetMoblieAndPasswordEntity class]]) {
//            SetMoblieAndPasswordEntity *e = (SetMoblieAndPasswordEntity*)entity;
//            if ([e.result isEqualToString:@"Y"]) {
//                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"恭喜！\n您成功升级成为时机策略人！" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil];
//                [alert show];
//            }
//        }else {
//            if(val.resultCode != AFNETWORKING_ERROR_CODE){
//                
//                DEFINED_WEAK_SELF
//                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
//                    [_self.navigationController popViewControllerAnimated:YES];
//                });
//            }
//            [WpCommonFunction showNotifyHUDAtViewBottom:self.view withErrorMessage:val.resultString];
//        }
//    }];
    
    
    //绑定昵称
    [[UserInfoManager shareUserInfoManager] bindUserWithNickName:nickname Block:^(ReturnValue *val, QUMock *mock, QUEntity *entity) {
       
        if (val.result && [entity isKindOfClass:[SetNickNameEntity class]]) {
            
            SetNickNameEntity *e = (SetNickNameEntity *)entity;
            if ([e.result isEqualToString:@"Y"]) {
                
                UIAlertView *nickNameAlert = [[UIAlertView alloc] initWithTitle:nil message:@"恭喜！\n您成功升级成为时机策略人！" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [nickNameAlert show];
            }else{
                if(val.resultCode != AFNETWORKING_ERROR_CODE){
                
                    DEFINED_WEAK_SELF
                    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                    [_self.navigationController popViewControllerAnimated:YES];
                });
            }
            [WpCommonFunction showNotifyHUDAtViewBottom:self.view withErrorMessage:val.resultString];

            }
        }
        
    }];
    
    
    
    
    
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    [self showGesture];
}

-(void)showGesture{
    if (![GestureUtil isPwdExisted]) {
        GestureVC *controller = [[GestureVC alloc] initWithNibName:@"GestureView" bundle:[NSBundle mainBundle]];
        controller.delegate = self;
        controller.runMode = GestureView_Mode_Active;
        [self presentViewController:controller animated:YES completion:nil];
    }
}


#pragma marks - PasswordViewControllerDelegate
-(void)pwdViewControllerDidClose:(UIViewController *)vc{
    if (self.pwdDelegate && [self.pwdDelegate respondsToSelector:@selector(pwdViewControllerUnlocked:)]) {
        [self.pwdDelegate pwdViewControllerUnlocked:self];
    }
}
@end
